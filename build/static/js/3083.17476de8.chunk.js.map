{"version":3,"file":"static/js/3083.17476de8.chunk.js","mappings":"2MAMMA,GAAcC,EAAAA,EAAAA,KAAO,SAACC,GAAK,OAAK,SAAC,KAAa,UAAKA,GAAS,GAAE,CAChEC,kBAAmB,SAACC,GAAI,MAAc,eAATA,CAAqB,GADlCH,EAEjB,gBAAGI,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAU,MAAQ,CAC3BC,MAAOF,EAAMG,QAAQC,KAAKC,QAC1BC,WAAY,IACZC,aAAcN,EAAa,EAAI,EAClC,IAEKO,EAAa,SAAH,OAAMC,EAAQ,EAARA,SAAUR,EAAU,EAAVA,WAAeS,GAAM,mBACjD,SAACf,GAAW,gBAACM,WAAYA,GAAgBS,GAAM,aAC1CD,IACS,EAQlBD,EAAWG,aAAe,CACtBV,YAAY,GAGhB,K,wMC2IA,UAzJA,WACE,IAAMW,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACjB,EAAwBC,EAAAA,SAAe,IAAG,eAAnCC,EAAI,KAAEC,EAAO,KACpB,EAAwBF,EAAAA,SAAe,IAAG,eAAnCG,EAAI,KAAEC,EAAO,KACpB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAAgCP,EAAAA,SAAe,IAAG,eAA3CQ,EAAQ,KAAEC,EAAW,KAC5B,EAA0BT,EAAAA,SAAe,IAAG,eAArCU,EAAK,KAAEC,EAAQ,KAElBC,EAAY,IAAIC,QAoFpB,OAnFAD,EAAUE,OAAO,UAAWC,gDAC5BH,EAAUE,OAAO,gBAAiB,UAAYE,aAAaC,QAAQ,UACnEL,EAAUE,OAAO,eAAgB,oBAwCjCd,EAAAA,WAAgB,YAlBhB,WACE,IAAIkB,EAAMC,KAAKC,UAAU,CACvBC,QAASL,aAAaC,QAAQ,YAE5BK,EAAiB,CACnBC,OAAQ,OACRC,QAASZ,EACTa,KAAMP,EACNQ,SAAU,UAEZC,MAAM,GAAD,OAAIZ,gDAA6B,kBAAkBO,GACrDM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACL7B,EAAQ6B,EAAOC,KACjB,IACCC,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAI,QAASF,EAAM,GACjD,CAGEG,GAvCF,WACE,IAAInB,EAAMC,KAAKC,UAAU,CACvBC,QAASL,aAAaC,QAAQ,UAC9BP,MAAOd,EAAO0C,KAEZhB,EAAiB,CACnBC,OAAQ,OACRC,QAASZ,EACTa,KAAMP,EACNQ,SAAU,UAEZC,MAAM,GAAD,OAAIZ,gDAA6B,cAAcO,GACjDM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACL3B,EAAQ2B,EAAOC,KAAKO,MACpB5B,EAASoB,EAAOC,KAAKQ,MACvB,IACCP,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAI,QAASF,EAAM,GACjD,CAsBEO,EACF,GAAG,KAuCD,SAAC,IAAQ,CAACC,MAAM,gBAAe,UAC7B,kBAAMC,OAAO,IAAIC,SAtCrB,SAAsBC,GACpBA,EAAMC,iBACNvC,GAAa,GACb,IAAIW,EAAMC,KAAKC,UAAU,CACvBC,QAASL,aAAaC,QAAQ,UAC9B8B,KAAM5C,EACN6C,WAAYxC,EACZE,MAAOA,IAELY,EAAiB,CACnBC,OAAQ,OACRC,QAASZ,EACTa,KAAMP,EACNQ,SAAU,UAGZC,MAAM,GAAD,OAAIZ,gDAA6B,WAAWO,GAC9CM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACe,MAAhBA,EAAOgB,MACTjD,EAAS,aACTmD,EAAAA,GAAAA,QAAc,uBAAwB,CACpCC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,KAGbhD,GAAa,EAEjB,IACC0B,OAAM,SAACC,GAAW,GACvB,EAI4C,WACtC,UAAC,KAAI,CAACsB,WAAS,EAACC,QAASC,EAAAA,GAAY,WACrC,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACpB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,gCACpB,SAAC,IAAM,CACLxB,GAAG,SACHnC,KAAK,SACL4D,MAAOvD,EAEPwD,SAAU,SAACC,GAAC,OAAKxD,EAAYwD,EAAEC,OAAOH,MAAM,EAAC,SAE5C9D,EAAKkE,KAAI,SAACC,EAAKC,GACd,OACE,SAAC,IAAQ,CAASN,MAAOK,EAAIE,WAAW,SACrCF,EAAIG,MADQF,EAInB,KATK7D,SAaX,SAAC,KAAI,CAACmD,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,yBACpB,SAAC,IAAS,CACRU,WAAS,EACTlC,GAAG,QACHnC,KAAK,QACLsE,KAAK,SACLC,QAAS,SAACT,GACRA,EAAEC,OAAOH,MAAQY,KAAKC,IAAI,EAAGC,SAASZ,EAAEC,OAAOH,QAC5Ce,WACAC,MAAM,EAAG,EACd,EACAhB,MAAO5D,EACP6D,SAAU,SAACC,GAAC,OAAK7D,EAAQ6D,EAAEC,OAAOH,MAAM,EACxCiB,YAAY,4BAKpB,mBACA,mBACA,4BACG1E,GACC,SAAC,IAAgB,KAEjB,SAAC,IAAM,CAAC2E,QAAQ,YAAYR,KAAK,SAAQ,mCAQrD,C","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/manage-area/pin-code/edit-pin-code.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [rows, setRows] = React.useState([]);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [district, setDistrict] = React.useState(\"\");\r\n  const [zipId, setZipId] = React.useState(\"\");\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getZipById() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      zipId: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getZipById`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setName(result.data.Code);\r\n        setZipId(result.data.ZipID);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  function getAllDistrict() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllDistrict`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setRows(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getAllDistrict();\r\n    getZipById();\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      code: name,\r\n      districtId: district,\r\n      zipId: zipId\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}editZip`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/pin-code\");\r\n          toast.success(\"Updated Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"Edit Pin Code\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose District</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={district}\r\n                key={district}\r\n                onChange={(e) => setDistrict(e.target.value)}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.DistrictID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Pin Code</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"state\"\r\n                name=\"state\"\r\n                type='number'\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter Pin Code\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Update Pin Code\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","params","useParams","navigate","useNavigate","React","rows","setRows","name","setName","useState","isLoading","setIsLoading","district","setDistrict","zipId","setZipId","myHeaders","Headers","append","process","localStorage","getItem","raw","JSON","stringify","adminId","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","catch","error","console","log","getAllDistrict","id","Code","ZipID","getZipById","title","action","onSubmit","event","preventDefault","code","districtId","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","container","spacing","gridSpacing","item","xs","md","required","value","onChange","e","target","map","row","i","DistrictID","Name","fullWidth","type","onInput","Math","max","parseInt","toString","slice","placeholder","variant"],"sourceRoot":""}