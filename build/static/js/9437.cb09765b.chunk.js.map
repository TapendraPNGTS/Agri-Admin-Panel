{"version":3,"file":"static/js/9437.cb09765b.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/category/add-category.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState();\r\n  const [fileName, setFileName] = useState();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [active, setActive] = React.useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  React.useEffect(() => {}, []);\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0]);\r\n    setFileName(event.target.value)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    var formdata = new FormData();\r\n    formdata.append(\"adminId\", localStorage.getItem(\"userId\"));\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"active\", active);\r\n    formdata.append(\"img\", file);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}addCategory`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/category\");\r\n          toast.success(\"Added Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"Add Category\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Category Title</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                inputProps={{ maxLength: 30 }}\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter category title\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose ThumbnailImage</InputLabel>\r\n              <div class=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  class=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange}\r\n                  value={fileName}\r\n                  required\r\n                />\r\n                <label class=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Add Category\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","navigate","useNavigate","useState","file","setFile","fileName","setFileName","React","name","setName","active","setActive","isLoading","setIsLoading","title","action","onSubmit","event","preventDefault","myHeaders","Headers","append","process","localStorage","getItem","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","catch","error","container","spacing","gridSpacing","item","xs","md","required","fullWidth","inputProps","maxLength","id","value","onChange","e","target","placeholder","class","type","accept","files","for","variant"],"sourceRoot":""}