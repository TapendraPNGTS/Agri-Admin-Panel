{"version":3,"file":"static/js/2291.72951fce.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/Staff Management/EditRoles.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Grid, MenuItem, Select, Stack , TextField} from \"@mui/material\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [active, setActive] = React.useState(true);\r\n  React.useEffect(() => {}, []);\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"token\", localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      name: name,\r\n      active: active,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}updateRole`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/role\");\r\n          toast.success(\"Added Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          if (result.code === 201) {\r\n            navigate(\"/role\");\r\n            toast.danger(\"User already exits\", {\r\n              position: toast.POSITION.TOP_CENTER,\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n            });\r\n          } else {\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"Update Role\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Name</InputLabel>\r\n              <Select\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              >\r\n                <MenuItem value=\"user\">User</MenuItem>\r\n                <MenuItem value=\"salesPerson\">Sales Person</MenuItem>\r\n                <MenuItem value=\"manager\">Manager</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        {/* <center> */}\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Update Roles\r\n        </Button>\r\n        {/* </center> */}\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","navigate","useNavigate","React","name","setName","active","setActive","myHeaders","Headers","append","process","localStorage","getItem","title","action","onSubmit","event","preventDefault","raw","JSON","stringify","adminId","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","catch","error","container","spacing","gridSpacing","item","xs","md","required","id","value","onChange","e","target","variant","type"],"sourceRoot":""}