{"version":3,"file":"static/js/5734.ab3e753b.chunk.js","mappings":"0UAwBe,SAASA,IACtB,MAAwBC,EAAAA,SAAe,GAAE,eAAlCC,EAAI,KAAEC,EAAO,KACpB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAzBC,GAAF,KAAW,MACxB,EAAsCJ,EAAAA,SAAe,IAAG,eAAjDK,EAAW,KAAEC,EAAc,KAClC,GAAwBH,EAAAA,EAAAA,UAAS,IAAG,eAA7BI,EAAI,KAAS,KAwCpB,OACE,iCACE,SAAC,IAAS,CACRC,GAAG,kBACHC,MAAM,eACNC,KAAK,SACLC,WAAS,EACTC,SAAU,SAACC,GACTT,EAAUS,EAAEC,OAAOC,MACrB,KAGF,SAAC,IAAQ,CACPC,OACE,SAAC,KAAI,CACHC,WAAS,EACTC,WAAW,SACXC,eAAe,gBACfC,QAASC,EAAAA,GAAY,UAErB,SAAC,KAAI,CAACC,MAAI,YACR,SAAC,IAAU,CAACC,QAAQ,KAAI,iCAI9BC,SAAS,EAAM,UAGf,UAAC,IAAI,YACH,SAAC,KAAI,CACHP,WAAS,EACTC,WAAW,SACXC,eAAe,gBACfC,QAASC,EAAAA,MAEX,mBACA,mBACA,UAAC,IAAK,CAACI,GAAI,CAAEC,MAAO,OAAQC,SAAU,UAAW,WAC/C,SAAC,MAAY,CACXC,QAAS,CAACC,EAAAA,GAAeC,EAAAA,GAAgBC,EAAAA,IACzCC,YAAa,eACbC,cAAe,CACbC,KAAM,kBACNC,OAAQ,QACRC,MAAO,IAETC,YAAY,UAEZC,UAAU,EACVC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,gBAAgB,OAChBC,WACE,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,OAGxD,SAAC,IAAe,CACdC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO3C,EAAK4C,OACZ9C,YAAaA,EACbJ,KAAMA,EACNmD,aAxEa,SAACC,EAAOC,GAC/BpD,EAAQoD,EACV,EAuEYC,oBArEoB,SAACF,GAC/B/C,GAAgB+C,EAAMvC,OAAOC,OAC7Bb,EAAQ,EACV,cAkFF,C","sources":["views/utilities/HRM/attendance/view-attendence.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Card from \"@mui/material/Card\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { IconButton, Grid } from \"@mui/material\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { Chip, Typography } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Attenance() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = useState(\"\");\r\n\r\n  //   function getAllAttendence() {\r\n  //     var myHeaders = new Headers();\r\n  //     myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  //     myHeaders.append(\r\n  //       \"Authorization\",\r\n  //       \"Bearer \" + localStorage.getItem(\"token\")\r\n  //     );\r\n  //     myHeaders.append(\"Content-Type\", \"application/json\");\r\n  //     var raw = JSON.stringify({\r\n  //       adminId: localStorage.getItem(\"userId\"),\r\n  //     });\r\n  //     var requestOptions = {\r\n  //       method: \"POST\",\r\n  //       headers: myHeaders,\r\n  //       body: raw,\r\n  //       redirect: \"follow\",\r\n  //     };\r\n  //     fetch(`${process.env.REACT_APP_API_URL}getAllAttendence`, requestOptions)\r\n  //       .then((response) => response.json())\r\n  //       .then((result) => {\r\n  //         setRows(result.data);\r\n  //       })\r\n  //       .catch((error) => console.log(\"error\", error));\r\n  //   }\r\n\r\n  //   useEffect(() => {\r\n  //     getAllAttendence();\r\n  //   }, []);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n\r\n      <MainCard\r\n        title={\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">User Attendance</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        content={false}\r\n      >\r\n        {/* {rows ? ( */}\r\n        <Card>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          ></Grid>\r\n          <br />\r\n          <br />\r\n          <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n            <FullCalendar\r\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n              initialView={\"dayGridMonth\"}\r\n              headerToolbar={{\r\n                left: \"prev,today,next\",\r\n                center: \"title\",\r\n                right: \"\",\r\n              }}\r\n              themeSystem=\"Simplex\"\r\n              // events={events}\r\n              editable={false}\r\n              nowIndicator={true}\r\n              dayMaxEvents={true}\r\n              selectable={true}\r\n              displayEventEnd=\"true\"\r\n              eventColor={\r\n                \"#\" + Math.floor(Math.random() * 16777215).toString(16)\r\n              }\r\n            />\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 20, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </Card>\r\n        {/* // ) : (\r\n        //    <>\r\n        //       <br></br>\r\n                     <center>\r\n                        <CircularProgress />\r\n                     </center>\r\n              </>\r\n        //   </>\r\n        // )} */}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Attenance","React","page","setPage","useState","setSearch","rowsPerPage","setRowsPerPage","rows","id","label","type","fullWidth","onChange","e","target","value","title","container","alignItems","justifyContent","spacing","gridSpacing","item","variant","content","sx","width","overflow","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","initialView","headerToolbar","left","center","right","themeSystem","editable","nowIndicator","dayMaxEvents","selectable","displayEventEnd","eventColor","Math","floor","random","toString","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange"],"sourceRoot":""}