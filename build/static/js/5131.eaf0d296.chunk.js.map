{"version":3,"file":"static/js/5131.eaf0d296.chunk.js","mappings":"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","sources":["ui-component/extended/Avatar.js","views/utilities/order-history/viewPendingOrder.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Paper,\r\n  Container,    \r\n} from \"@mui/material\";\r\n\r\nimport Avatar from \"ui-component/extended/Avatar\";\r\n// import { useTheme } from \"@mui/material/styles\";\r\n\r\nconst viewPendingOrder = () => {\r\n  //   const theme = useTheme();\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead\r\n            sx={{\r\n              borderTop: \"1px solid\",\r\n              //   color:\r\n              //     theme.palette.mode === \"dark\"\r\n              //       ? theme.palette.dark.light + 15\r\n              //       : \"grey.200\",\r\n            }}\r\n          >\r\n            <TableRow>\r\n              <TableCell>Farmer Name</TableCell>\r\n              <TableCell align=\"right\">Address</TableCell>\r\n              <TableCell align=\"center\">OrderId</TableCell>\r\n              <TableCell align=\"right\">Transaction Id</TableCell>\r\n              <TableCell align=\"right\">Mode Of Payment</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {/* {rows.map((row, index) => {\r\n              const colorsData = row.color ? getColor(row.color) : false;\r\n              return ( */}\r\n            <TableRow\r\n              //   key={index}\r\n              sx={{ \"&:last-of-type td, &:last-of-type th\": { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                  <Grid item>\r\n                    <Stack spacing={0}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {/* {row.name} */}\r\n                        Abhi\r\n                      </Typography>\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <Stack>\r\n                  {/* {row.offerPrice && ( */}\r\n                  <Typography variant=\"subtitle1\">\r\n                    {/* ₹{row.offerPrice} */}\r\n                    21 Vijay Nagar Indore\r\n                  </Typography>\r\n                  {/* )} */}\r\n                </Stack>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {/* <Increment\r\n                  quantity={row.quantity}\r\n                  itemId={row.itemId}\r\n                  updateQuantity={updateQuantity}\r\n                /> */}\r\n                264564fjddjfs\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {/* {row.offerPrice && row.quantity && ( */}\r\n                <Typography variant=\"subtitle1\">\r\n                  {/* ₹{row.offerPrice * row.quantity} */}\r\n                  6545455kASDJS5545\r\n                </Typography>\r\n                {/* )} */}\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {/* {row.offerPrice && row.quantity && ( */}\r\n                <Typography variant=\"subtitle1\">\r\n                  {/* ₹{row.offerPrice * row.quantity} */}\r\n                  Cash\r\n                </Typography>\r\n                {/* )} */}\r\n              </TableCell>\r\n            </TableRow>\r\n            {/* );\r\n            })} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead\r\n            sx={{\r\n              borderTop: \"1px solid\",\r\n              //   color:\r\n              //     theme.palette.mode === \"dark\"\r\n              //       ? theme.palette.dark.light + 15\r\n              //       : \"grey.200\",\r\n            }}\r\n          >\r\n            <TableRow>\r\n              <TableCell>Product</TableCell>\r\n              <TableCell align=\"right\">Price</TableCell>\r\n              <TableCell align=\"center\">Quantity</TableCell>\r\n              <TableCell align=\"right\">Total</TableCell>\r\n              <TableCell align=\"right\" />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {/* {rows.map((row, index) => {\r\n              const colorsData = row.color ? getColor(row.color) : false;\r\n              return ( */}\r\n            <TableRow\r\n              //   key={index}\r\n              sx={{ \"&:last-of-type td, &:last-of-type th\": { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                  <Grid item>\r\n                    <Avatar\r\n                      size=\"md\"\r\n                      variant=\"rounded\"\r\n                      //   src={`${process.env.REACT_APP_IMAGE_URL}${row.image}`}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Stack spacing={0}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {/* {row.name} */}\r\n                        Rama Zyme\r\n                      </Typography>\r\n                    </Stack>\r\n                  </Grid>\r\n                </Grid>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <Stack>\r\n                  {/* {row.offerPrice && ( */}\r\n                  <Typography variant=\"subtitle1\">\r\n                    {/* ₹{row.offerPrice} */}\r\n                    ₹2051\r\n                  </Typography>\r\n                  {/* )} */}\r\n                </Stack>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {/* <Increment\r\n                  quantity={row.quantity}\r\n                  itemId={row.itemId}\r\n                  updateQuantity={updateQuantity}\r\n                /> */}\r\n                2\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {/* {row.offerPrice && row.quantity && ( */}\r\n                <Typography variant=\"subtitle1\">\r\n                  {/* ₹{row.offerPrice * row.quantity} */}\r\n                  ₹4102\r\n                </Typography>\r\n                {/* )} */}\r\n              </TableCell>\r\n            </TableRow>\r\n            {/* );\r\n            })} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <section style={{ backgroundColor: \"#eee\" }}>\r\n        <Container>\r\n          <Typography variant=\"h4\" sx={{ color: \"#f37a27\", mt: 4, pb: 2 }}>\r\n            Tracking Order\r\n          </Typography>\r\n\r\n          <Grid container>\r\n            <Grid item lg={8}>\r\n              <div>\r\n                <ul\r\n                  className=\"list-inline items d-flex justify-content-between\"\r\n                  sx={{ listStyleType: \"none\", padding: 0 }}\r\n                >\r\n                  <li className=\"list-inline-item items-list\">\r\n                    <Paper\r\n                      elevation={0}\r\n                      sx={{ backgroundColor: \"#39AD4A\", px: 2, py: 1 }}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      Ordered\r\n                    </Paper>\r\n                  </li>\r\n                  <li className=\"list-inline-item items-list\">\r\n                    <Paper elevation={0} sx={{ px: 2, py: 1 }}>\r\n                      Shipped\r\n                    </Paper>\r\n                  </li>\r\n                  <li className=\"list-inline-item items-list\">\r\n                    <Paper\r\n                      elevation={0}\r\n                      sx={{ backgroundColor: \"#f37a27\", px: 2, py: 1 }}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      On the way\r\n                    </Paper>\r\n                  </li>\r\n                  <li className=\"list-inline-item items-list\">\r\n                    <Paper\r\n                      elevation={0}\r\n                      sx={{ backgroundColor: \"#f37a27\", px: 2, py: 1 }}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      Delivered\r\n                    </Paper>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Typography variant=\"body1\" sx={{ mt: 4, mb: 0 }}>\r\n            Want any help?{\" \"}\r\n            <a href=\"#!\" style={{ color: \"#f37a27\" }}>\r\n              Please contact us\r\n            </a>\r\n          </Typography>\r\n        </Container>\r\n      </section>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default viewPendingOrder;\r\n"],"names":["color","outline","size","sx","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","spacing","height","item","xs","minWidth","borderTop","align","component","scope","container","alignItems","variant","style","backgroundColor","mt","pb","lg","className","listStyleType","padding","elevation","px","py","mb","href"],"sourceRoot":""}