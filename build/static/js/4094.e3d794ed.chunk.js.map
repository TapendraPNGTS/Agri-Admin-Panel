{"version":3,"file":"static/js/4094.e3d794ed.chunk.js","mappings":"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","sources":["views/utilities/product/edit-product.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport ProductApi from \"../../../api/product.api\";\r\nimport CategoryApi from \"../../../api/category.api\";\r\nimport { updateAllCategory } from \"../../../redux/redux-slice/category.slice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SubCategoryApi from \"../../../api/sub-category.api\";\r\nimport { updateAllSubCategory } from \"../../../redux/redux-slice/sub-category.slice\";\r\n\r\nfunction App() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const productApi = new ProductApi();\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = useState([]);\r\n  const [file1, setFile1] = useState([]);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [price, setPrice] = React.useState(\"\");\r\n  const [quantity, setQuantity] = React.useState(\"\");\r\n  const [active, setActive] = React.useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [categoryId, setCategoryId] = useState();\r\n  const [franchisePrice, setFranchisePrice] = useState(\"\");\r\n  const [bestSeller, setBestSeller] = React.useState(false);\r\n  const [newArrival, setNewArrival] = React.useState(false);\r\n  const [bestDeal, setBestDeal] = React.useState(false);\r\n  const [discount, setDiscount] = React.useState(false);\r\n  const [discountPrice, setDiscountPrice] = React.useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [fileName, setFileName] = useState([]);\r\n  const [fileName1, setFileName1] = useState();\r\n  const [coverImage, setCoverImage] = React.useState(\"\");\r\n  const [proImage, setProImage] = React.useState([]);\r\n  const [features, setFeatures] = useState();\r\n  const [mainVarient, setMainVerient] = React.useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0]);\r\n    setFileName(event.target.value);\r\n  }\r\n  function handleChange1(event) {\r\n    setFile1(event.target.files);\r\n    setFileName1(event.target.value);\r\n  }\r\n  const handleChangeDescription = (content, delta, source, editor) => {\r\n    setDescription(content);\r\n  };\r\n\r\n  const handleChangeFeatures = (content, delta, source, editor) => {\r\n    setFeatures(content);\r\n  };\r\n\r\n  const getProductById = useCallback(async () => {\r\n    try {\r\n      const getProductByIdResponse = await productApi.getProductById({\r\n        productId: params.id,\r\n      });\r\n      if (\r\n        getProductByIdResponse &&\r\n        getProductByIdResponse?.data?.code === 200\r\n      ) {\r\n        setTitle(getProductByIdResponse.data.data.Name);\r\n        setCategoryId(getProductByIdResponse.data.data.CategoryID.CategoryID);\r\n        setTitle(getProductByIdResponse.data.data.Name);\r\n        setActive(getProductByIdResponse.data.data.IsActive);\r\n        setPrice(getProductByIdResponse.data.data.Price);\r\n        setQuantity(getProductByIdResponse.data.data.Quantity);\r\n        setDiscount(getProductByIdResponse.data.data.Discount);\r\n        setFranchisePrice(getProductByIdResponse.data.data.FrenchisePrice);\r\n        setCoverImage(getProductByIdResponse.data.data.CoverImage);\r\n        setProImage(getProductByIdResponse.data.data.Images);\r\n        // setBestSeller(getProductByIdResponse.data.data.isBestSeller);\r\n        // setBestDeal(getProductByIdResponse.data.data.IsBestDeal);\r\n        // setNewArrival(getProductByIdResponse.data.data.IsNewArrival);\r\n        setDiscountPrice(getProductByIdResponse.data.data.DiscountPrice);\r\n        setDescription(getProductByIdResponse.data.data.Description);\r\n        // setFeatures(getProductByIdResponse.data.data.feature);\r\n      } else {\r\n        return toast.error(`Something went wrong!`);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    getProductById();\r\n  }, []);\r\n\r\n  async function handleSubmit(event) {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n    var formdata = new FormData();\r\n    formdata.append(\"adminId\", localStorage.getItem(\"userId\"));\r\n    formdata.append(\"productId\", params.id);\r\n    formdata.append(\"name\", title);\r\n    formdata.append(\"active\", active);\r\n    formdata.append(\"price\", price);\r\n    formdata.append(\"quantity\", quantity);\r\n    formdata.append(\"feature\", features);\r\n    formdata.append(\"description\", description);\r\n    formdata.append(\"categoryId\", categoryId);\r\n    const variant = JSON.stringify(tags);\r\n    formdata.append(\"variant\", variant);\r\n    formdata.append(\"subCategoryId\", mainVarient);\r\n    formdata.append(\"img\", file);\r\n\r\n    for (const key of Object.keys(file1)) {\r\n      formdata.append(\"images\", file1[key]);\r\n    }\r\n    formdata.append(\"frenchisePrice\", franchisePrice);\r\n    formdata.append(\"discount\", discount);\r\n    formdata.append(\"discountPrice\", discountPrice);\r\n    formdata.append(\"isNew\", newArrival);\r\n    formdata.append(\"isBestSeller\", bestSeller);\r\n    formdata.append(\"isBestDeal\", bestDeal);\r\n    const editProductResponse = await productApi.editProduct(formdata);\r\n    if (editProductResponse && editProductResponse?.data?.code === 200) {\r\n      toast.success(`Added successsfully`);\r\n      navigate(\"/product\", { replace: true });\r\n    } else {\r\n      return toast.error(`Something went wrong!`);\r\n    }\r\n  }\r\n\r\n  const categoryApi = new CategoryApi();\r\n  const rows = useSelector((state) => state.category.Category);\r\n\r\n  const getAllCategory = useCallback(async () => {\r\n    try {\r\n      const categories = await categoryApi.getAllCategory();\r\n      if (!categories || !categories.data.data) {\r\n        return toast.error(\"no available\");\r\n      } else {\r\n        dispatch(updateAllCategory(categories.data.data));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n    const subCategoryApi = new SubCategoryApi();\r\n    const rowses = useSelector((state) => state.subCategory.SubCategory);\r\n\r\n    async function handleSetSubCategory(event) {\r\n      event.preventDefault();\r\n      const subCategories = await subCategoryApi.getSubCategoryByCategoryId({\r\n        categoryId: categoryId,\r\n      });\r\n      if (subCategories && subCategories?.data?.code === 200) {\r\n        return dispatch(updateAllSubCategory(subCategories.data.data));\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    \r\n  const [tags, setTags] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if ((event.key === \"Enter\" && input) || event.key === \" \") {\r\n      setTags([...tags, input.trim()]);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  const handleTagClick = (index) => {\r\n    setTags(tags.filter((tag, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Edit Product\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"category\"\r\n                name=\"category\"\r\n                inputProps={{ maxLength: 30 }}\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Enter category title\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"Enter Price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Franchise Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={franchisePrice}\r\n                onChange={(e) => setFranchisePrice(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Variant</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n                onKeyDown={handleInputKeyDown}\r\n              />\r\n              <br />\r\n              <div>\r\n                {tags.map((tag, index) => (\r\n                  <span>\r\n                    <span\r\n                      key={index}\r\n                      onClick={() => handleTagClick(index)}\r\n                      style={{ border: \"1px solid\", borderRadius: \"5px\" }}\r\n                    >\r\n                      &nbsp; {tag} <span style={{ color: \"red\" }}>x</span>{\" \"}\r\n                      &nbsp;\r\n                    </span>\r\n                    &nbsp; &nbsp;\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Quantity</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 3);\r\n                }}\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                placeholder=\"Enter Quantity\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose Category</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={categoryId}\r\n                key={categoryId}\r\n                onChange={(e) => setCategoryId(e.target.value)}\r\n                onBlur={handleSetSubCategory}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.CategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Sub Category</InputLabel>\r\n              <Select\r\n                id=\"mainVarient\"\r\n                name=\"mainVarient\"\r\n                value={categoryId}\r\n                onChange={(e) => setMainVerient(e.target.value)}\r\n                renderValue={\r\n                  categoryId !== \"\" ? undefined : () => \"--Select SubCategory--\"\r\n                }\r\n              >\r\n                {rowses.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.SubCategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Seller</InputLabel>\r\n              <Select\r\n                id=\"best-seller\"\r\n                name=\"best-seller\"\r\n                value={bestSeller}\r\n                onChange={(e) => setBestSeller(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>New Arrival</InputLabel>\r\n              <Select\r\n                id=\"new-arrival\"\r\n                name=\"new-arrival\"\r\n                value={newArrival}\r\n                onChange={(e) => setNewArrival(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Deal</InputLabel>\r\n              <Select\r\n                id=\"best-deal\"\r\n                name=\"best-deal\"\r\n                value={bestDeal}\r\n                onChange={(e) => setBestDeal(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack>\r\n              <InputLabel required>Description</InputLabel>\r\n              <ReactQuill\r\n                className=\"quill-editor\"\r\n                size={`lg`}\r\n                theme=\"snow\"\r\n                value={description}\r\n                onChange={handleChangeDescription}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack>\r\n              <InputLabel required>Features</InputLabel>\r\n              <ReactQuill\r\n                className=\"quill-editor\"\r\n                size={`md`}\r\n                theme=\"snow\"\r\n                value={features}\r\n                onChange={handleChangeFeatures}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Discount</InputLabel>\r\n              <Select\r\n                id=\"discount\"\r\n                name=\"discount\"\r\n                value={discount}\r\n                key={discount}\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          {discount ? (\r\n            <Grid item xs={6} md={6}>\r\n              <Stack>\r\n                <InputLabel required>Discount Price</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onInput={(e) => {\r\n                    e.target.value = Math.max(0, parseFloat(e.target.value))\r\n                      .toString()\r\n                      .slice(0, 6);\r\n                  }}\r\n                  type=\"number\"\r\n                  value={discountPrice}\r\n                  onChange={(e) => setDiscountPrice(e.target.value)}\r\n                  placeholder=\"Enter product price\"\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel>Cover Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  value={fileName}\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange}\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose Mutiple Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  multiple\r\n                  value={fileName1}\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange1}\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName1}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={4} md={4}>\r\n            <InputLabel required>Cover Image</InputLabel>\r\n            <Stack>\r\n              <a href={`${coverImage}`} target=\"_blank\">\r\n                <img src={`${coverImage}`} width={200} height={200} />\r\n              </a>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <InputLabel required>Images</InputLabel>\r\n            {proImage.map((image, index) => {\r\n              return (\r\n                <Stack>\r\n                  <a href={image} target=\"_blank\" key={index}>\r\n                    <img src={image} width={200} height={200} />\r\n                  </a>\r\n                </Stack>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Update Product\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["params","useParams","navigate","useNavigate","productApi","ProductApi","dispatch","useDispatch","useState","file","setFile","file1","setFile1","React","title","setTitle","price","setPrice","quantity","setQuantity","active","setActive","isLoading","setIsLoading","categoryId","setCategoryId","franchisePrice","setFranchisePrice","bestSeller","setBestSeller","newArrival","setNewArrival","bestDeal","setBestDeal","discount","setDiscount","discountPrice","setDiscountPrice","description","setDescription","fileName","setFileName","fileName1","setFileName1","coverImage","setCoverImage","proImage","setProImage","features","setFeatures","mainVarient","setMainVerient","getProductById","useCallback","productId","id","getProductByIdResponse","data","code","Name","CategoryID","IsActive","Price","Quantity","Discount","FrenchisePrice","CoverImage","Images","DiscountPrice","Description","toast","console","error","event","preventDefault","formdata","FormData","append","localStorage","getItem","variant","JSON","stringify","tags","Object","keys","key","editProduct","editProductResponse","replace","categoryApi","CategoryApi","rows","useSelector","state","category","Category","getAllCategory","categories","updateAllCategory","useEffect","subCategoryApi","SubCategoryApi","rowses","subCategory","SubCategory","getSubCategoryByCategoryId","subCategories","updateAllSubCategory","setTags","input","setInput","action","onSubmit","container","spacing","gridSpacing","item","xs","md","required","fullWidth","name","inputProps","maxLength","value","onChange","e","target","placeholder","onInput","Math","max","parseInt","toString","slice","type","onKeyDown","trim","map","tag","index","onClick","filter","i","handleTagClick","style","border","borderRadius","color","onBlur","row","renderValue","undefined","SubCategoryID","className","size","theme","content","delta","source","editor","parseFloat","accept","files","for","multiple","href","src","width","height","image"],"sourceRoot":""}