{"version":3,"file":"static/js/2066.43c81d38.chunk.js","mappings":"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","sources":["api/index.api.js","api/product.api.js","conffigs/endpoints.config.js","views/utilities/inventory/inventory.js"],"sourcesContent":["import axios from \"axios\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nexport class HttpClient {\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = async ({ response, config }) => {\r\n    const originalRequest = config;\r\n    if (response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      return this.instance(originalRequest);\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n  };\r\n}\r\n\r\nexport default HttpClient;\r\n","import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../conffigs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass ProductList extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"Authkey\"] = process.env.REACT_APP_AUTH_KEY;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllProductListConfig = ApiRoutes.Product.All;\r\n  AllProductFrenciseConfig = ApiRoutes.Product.AllProductFrencise;\r\n  ProductListByIdConfig = ApiRoutes.Product.ProductById;\r\n  AddProductListConfig = ApiRoutes.Product.AddProduct;\r\n  addProductVarientsListConfig = ApiRoutes.Product.addProductVarients;\r\n  EditProductListConfig = ApiRoutes.Product.EditProduct;\r\n  EditProductVariantListConfig = ApiRoutes.Product.EditProductVariant;\r\n  DeleteProductListConfig = ApiRoutes.Product.DeleteProduct;\r\n\r\n  getAllProduct = async () => {\r\n    return this.instance({\r\n      method: this.AllProductListConfig.Method,\r\n      url: this.AllProductListConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getFranchiseProduct = async () => {\r\n    return this.instance({\r\n      method: this.AllProductFrenciseConfig.Method,\r\n      url: this.AllProductFrenciseConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getProductById = async (data) => {\r\n    return this.instance({\r\n      method: this.ProductListByIdConfig.Method,\r\n      url: this.ProductListByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addProduct = async (data) => {\r\n    return this.instance({\r\n      method: this.AddProductListConfig.Method,\r\n      url: this.AddProductListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addProductVarients = async (data) => {\r\n    return this.instance({\r\n      method: this.addProductVarientsListConfig.Method,\r\n      url: this.addProductVarientsListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  editProduct = async (data) => {\r\n    return this.instance({\r\n      method: this.EditProductListConfig.Method,\r\n      url: this.EditProductListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  editProductVariant = async (data) => {\r\n    return this.instance({\r\n      method: this.EditProductVariantListConfig.Method,\r\n      url: this.EditProductVariantListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  deleteProduct = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteProductListConfig.Method,\r\n      url: this.DeleteProductListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default ProductList;\r\n","export const HttpMethod = {\r\n  Get: \"GET\",\r\n  Post: \"POST\",\r\n  Put: \"PUT\",\r\n  Patch: \"PATCH\",\r\n  Delete: \"DELETE\",\r\n};\r\n\r\nconst ApiRoutes = {\r\n  Dashboard: {\r\n    Data: {\r\n      Endpoint: \"/dashboard\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Auth: {\r\n    Login: {\r\n      Endpoint: \"/login\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  User: {\r\n    All: {\r\n      Endpoint: \"/getAllUser\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    UserById: {\r\n      Endpoint: \"/getUserById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  CheckOut: {\r\n    Data: {\r\n      Endpoint: \"/addAllCart\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Cod: {\r\n    Cod: {\r\n      Endpoint: \"/frenchiseProductCOD\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PhonePay: {\r\n      Endpoint: \"/payment\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Banner: {\r\n    All: {\r\n      Endpoint: \"/getAllBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    BannerById: {\r\n      Endpoint: \"/getBannerById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddBanner: {\r\n      Endpoint: \"/addBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditBanner: {\r\n      Endpoint: \"/updateBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteBanner: {\r\n      Endpoint: \"/deleteBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Category: {\r\n    All: {\r\n      Endpoint: \"/getAllCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CategoryById: {\r\n      Endpoint: \"/getCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCategory: {\r\n      Endpoint: \"/addCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCategory: {\r\n      Endpoint: \"/updateCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Attendence: {\r\n    All: {\r\n      Endpoint: \"/getAllAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AttendenceById: {\r\n      Endpoint: \"/getAttendenceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddAttendence: {\r\n      Endpoint: \"/addAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditAttendence: {\r\n      Endpoint: \"/updateAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteAttendence: {\r\n      Endpoint: \"/deleteAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Holiday: {\r\n    All: {\r\n      Endpoint: \"/getAllHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    HolidayById: {\r\n      Endpoint: \"/getHolidayById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddHoliday: {\r\n      Endpoint: \"/addHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditHoliday: {\r\n      Endpoint: \"/updateHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteHoliday: {\r\n      Endpoint: \"/deleteHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Service: {\r\n    All: {\r\n      Endpoint: \"/getAllService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ServiceById: {\r\n      Endpoint: \"/getServiceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddService: {\r\n      Endpoint: \"/addService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditService: {\r\n      Endpoint: \"/updateService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteService: {\r\n      Endpoint: \"/deleteService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  SubCategory: {\r\n    All: {\r\n      Endpoint: \"/getAllSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    SubCategoryById: {\r\n      Endpoint: \"/getSubCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    subCategoryByCategoryIdConfig: {\r\n      Endpoint: \"/getSubCategoryByCategoryId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddSubCategory: {\r\n      Endpoint: \"/addSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditSubCategory: {\r\n      Endpoint: \"/updateSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteSubCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Product: {\r\n    All: {\r\n      Endpoint: \"/getAllProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllProductFrencise: {\r\n      Endpoint: \"/getFranchiseProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ProductById: {\r\n      Endpoint: \"/getProductById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddProduct: {\r\n      Endpoint: \"/addProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    addProductVarients: {\r\n      Endpoint: \"/addProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProduct: {\r\n      Endpoint: \"/updateProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProductVariant: {\r\n      Endpoint: \"/updateProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteProduct: {\r\n      Endpoint: \"/deleteProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Frencise: {\r\n    All: {\r\n      Endpoint: \"/getAllFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseAccept: {\r\n      Endpoint: \"/getAllFrencisePending\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseById: {\r\n      Endpoint: \"/getFrenciseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseCheck: {\r\n      Endpoint: \"/frenciseCheck\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFrencise: {\r\n      Endpoint: \"/addFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFrencise: {\r\n      Endpoint: \"/editFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFrencise: {\r\n      Endpoint: \"/deleteFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Role: {\r\n    All: {\r\n      Endpoint: \"/getAllRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    RoleById: {\r\n      Endpoint: \"/getRoleById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddRole: {\r\n      Endpoint: \"/addRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditRole: {\r\n      Endpoint: \"/updateRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteRole: {\r\n      Endpoint: \"/deleteRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Staff: {\r\n    All: {\r\n      Endpoint: \"/getAllStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StaffById: {\r\n      Endpoint: \"/getStaffById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddStaff: {\r\n      Endpoint: \"/addStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditStaff: {\r\n      Endpoint: \"/updateStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteStaff: {\r\n      Endpoint: \"/deleteStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Farmer: {\r\n    All: {\r\n      Endpoint: \"/getAllServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FarmerById: {\r\n      Endpoint: \"/getServiceRequestById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFarmer: {\r\n      Endpoint: \"/addServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFarmer: {\r\n      Endpoint: \"/updateFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFarmer: {\r\n      Endpoint: \"/deleteFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  District: {\r\n    AllDistrict: {\r\n      Endpoint: \"/getAllDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictById: {\r\n      Endpoint: \"/getDistrictById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictByStateId: {\r\n      Endpoint: \"/getCityByStateId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddDistrict: {\r\n      Endpoint: \"/addDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditDistrict: {\r\n      Endpoint: \"/updateDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteDistrict: {\r\n      Endpoint: \"/deleteDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  State: {\r\n    AllState: {\r\n      Endpoint: \"/getAllState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StateById: {\r\n      Endpoint: \"/getStateById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddState: {\r\n      Endpoint: \"/addState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditState: {\r\n      Endpoint: \"/updateState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteState: {\r\n      Endpoint: \"/deleteState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  ZipCode: {\r\n    AllZipCode: {\r\n      Endpoint: \"/getAllZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ZipCodeById: {\r\n      Endpoint: \"/getZipById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddZipCode: {\r\n      Endpoint: \"/addZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditZipCode: {\r\n      Endpoint: \"/editZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteZipCode: {\r\n      Endpoint: \"/deleteZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseState: {\r\n    AllFranchiseState: {\r\n      Endpoint: \"/getAllStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseStateById: {\r\n      Endpoint: \"/getStateFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseState: {\r\n      Endpoint: \"/addStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseState: {\r\n      Endpoint: \"/editStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseState: {\r\n      Endpoint: \"/deleteStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseDistrict: {\r\n    AllFranchiseDistrict: {\r\n      Endpoint: \"/getAllDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseDistrictById: {\r\n      Endpoint: \"/getDistrictFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseDistrict: {\r\n      Endpoint: \"/addDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseDistrict: {\r\n      Endpoint: \"/editDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseDistrict: {\r\n      Endpoint: \"/deleteDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseBlock: {\r\n    AllFranchiseBlock: {\r\n      Endpoint: \"/getAllBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseBlockById: {\r\n      Endpoint: \"/getBlockFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseBlock: {\r\n      Endpoint: \"/addBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseBlock: {\r\n      Endpoint: \"/editBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseBlock: {\r\n      Endpoint: \"/deleteBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseCluster: {\r\n    AllFranchiseCluster: {\r\n      Endpoint: \"/getAllClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseClusterById: {\r\n      Endpoint: \"/getClusterFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseCluster: {\r\n      Endpoint: \"/addClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseCluster: {\r\n      Endpoint: \"/editClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseCluster: {\r\n      Endpoint: \"/deleteClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseVillage: {\r\n    AllFranchiseVillage: {\r\n      Endpoint: \"/getAllVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseVillageById: {\r\n      Endpoint: \"/getVillageFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseVillage: {\r\n      Endpoint: \"/addVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseVillage: {\r\n      Endpoint: \"/editVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseVillage: {\r\n      Endpoint: \"/deleteVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Commissiom: {\r\n    All: {\r\n      Endpoint: \"/getAllCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CommissiomById: {\r\n      Endpoint: \"/getCommissionById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCommissiom: {\r\n      Endpoint: \"/addCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCommissiom: {\r\n      Endpoint: \"/updateCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCommissiom: {\r\n      Endpoint: \"/deleteCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n};\r\n\r\nexport default ApiRoutes;\r\n","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Card from \"@mui/material/Card\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { CircularProgress, Typography } from \"@mui/material\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProductListApi from \"../../../api/product.api\";\r\nimport { updateAllProduct } from \"../../../redux/redux-slice/product.slice\";\r\n\r\nexport default function DataTable() {\r\n  const navigate = useNavigate();\r\n  const [page, setPage] = React.useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const dispatch = useDispatch();\r\n  const productApi = new ProductListApi();\r\n  const rows = useSelector((state) => state.product.Product);\r\n\r\n  const getAllProduct = useCallback(async () => {\r\n    try {\r\n      const product = await productApi.getAllProduct({});\r\n      if (!product || !product.data.data) {\r\n        return toast.error(\"no latest banners available\");\r\n      } else {\r\n        dispatch(updateAllProduct(product.data.data));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllProduct();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [rows]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n\r\n      <MainCard\r\n        title={\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">Inventory List</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        content={false}\r\n      >\r\n        {rows ? (\r\n          <Card>\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              spacing={gridSpacing}\r\n            >\r\n              <Grid item></Grid>\r\n            </Grid>\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n              <TableContainer sx={{ maxHeight: 540 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\" id=\"my-table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ pl: 3 }}>S. No.</TableCell>\r\n                      <TableCell>Category</TableCell>\r\n                      <TableCell>Image</TableCell>\r\n                      <TableCell>Product</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows\r\n                      .filter((row) =>\r\n                        search === \"\"\r\n                          ? row\r\n                          : row.Title.toLowerCase().includes(\r\n                              search.toLowerCase()\r\n                            )\r\n                      )\r\n\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, index) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            role=\"checkbox\"\r\n                            tabIndex={-1}\r\n                            key={row.code}\r\n                          >\r\n                            <TableCell sx={{ pl: 3 }} align=\"start\">\r\n                              {index + 1}\r\n                            </TableCell>\r\n                            <TableCell>{row.CategoryID.Name}</TableCell>\r\n                            <TableCell align=\"start\">\r\n                              <a\r\n                                href={row.CoverImage}\r\n                                target=\"_blank\"\r\n                              >\r\n                                <Avatar\r\n                                  alt=\"M21\"\r\n                                  src={row.CoverImage}\r\n                                  sx={{ width: 50, height: 50 }}\r\n                                />\r\n                              </a>\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">{row.Name}</TableCell>\r\n                            <TableCell align=\"start\">{row.Quantity}</TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </Card>\r\n        ) : (\r\n          <>\r\n            <br></br>\r\n            <center>\r\n              <CircularProgress />\r\n            </center>\r\n          </>\r\n        )}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n"],"names":["HttpClient","baseURL","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","config","originalRequest","status","_retry","Promise","resolve","this","axios","ProductList","process","_initializeRequestInterceptor","request","headers","getTokenLocal","AllProductListConfig","ApiRoutes","AllProductFrenciseConfig","ProductListByIdConfig","AddProductListConfig","addProductVarientsListConfig","EditProductListConfig","EditProductVariantListConfig","DeleteProductListConfig","getAllProduct","method","Method","url","Endpoint","getFranchiseProduct","getProductById","addProduct","addProductVarients","editProduct","editProductVariant","deleteProduct","HttpMethod","Dashboard","Data","Auth","Login","User","All","UserById","CheckOut","Cod","PhonePay","Banner","BannerById","AddBanner","EditBanner","DeleteBanner","Category","CategoryById","AddCategory","EditCategory","DeleteCategory","Attendence","AttendenceById","AddAttendence","EditAttendence","DeleteAttendence","Holiday","HolidayById","AddHoliday","EditHoliday","DeleteHoliday","Service","ServiceById","AddService","EditService","DeleteService","SubCategory","SubCategoryById","subCategoryByCategoryIdConfig","AddSubCategory","EditSubCategory","DeleteSubCategory","Product","AllProductFrencise","ProductById","AddProduct","EditProduct","EditProductVariant","DeleteProduct","Frencise","FrenciseAccept","FrenciseById","FrenciseCheck","AddFrencise","EditFrencise","DeleteFrencise","Role","RoleById","AddRole","EditRole","DeleteRole","Staff","StaffById","AddStaff","EditStaff","DeleteStaff","Farmer","FarmerById","AddFarmer","EditFarmer","DeleteFarmer","District","AllDistrict","DistrictById","DistrictByStateId","AddDistrict","EditDistrict","DeleteDistrict","State","AllState","StateById","AddState","EditState","DeleteState","ZipCode","AllZipCode","ZipCodeById","AddZipCode","EditZipCode","DeleteZipCode","FranchiseState","AllFranchiseState","FranchiseStateById","AddFranchiseState","EditFranchiseState","DeleteFranchiseState","FranchiseDistrict","AllFranchiseDistrict","FranchiseDistrictById","AddFranchiseDistrict","EditFranchiseDistrict","DeleteFranchiseDistrict","FranchiseBlock","AllFranchiseBlock","FranchiseBlockById","AddFranchiseBlock","EditFranchiseBlock","DeleteFranchiseBlock","FranchiseCluster","AllFranchiseCluster","FranchiseClusterById","AddFranchiseCluster","EditFranchiseCluster","DeleteFranchiseCluster","FranchiseVillage","AllFranchiseVillage","FranchiseVillageById","AddFranchiseVillage","EditFranchiseVillage","DeleteFranchiseVillage","Commissiom","CommissiomById","AddCommissiom","EditCommissiom","DeleteCommissiom","DataTable","useNavigate","React","page","setPage","useState","search","setSearch","rowsPerPage","setRowsPerPage","dispatch","useDispatch","productApi","ProductListApi","rows","useSelector","state","product","useCallback","toast","updateAllProduct","console","error","useEffect","id","label","type","fullWidth","onChange","e","target","value","title","container","alignItems","justifyContent","spacing","gridSpacing","item","variant","content","sx","width","overflow","maxHeight","stickyHeader","pl","filter","row","Title","toLowerCase","includes","slice","map","index","hover","role","tabIndex","align","CategoryID","Name","href","CoverImage","alt","src","height","Quantity","code","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange"],"sourceRoot":""}