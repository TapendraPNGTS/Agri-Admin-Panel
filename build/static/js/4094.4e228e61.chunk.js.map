{"version":3,"file":"static/js/4094.4e228e61.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/product/edit-product.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState([]);\r\n  const [file1, setFile1] = useState([]);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [price, setPrice] = React.useState(\"\");\r\n  const [quantity, setQuantity] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState([]);\r\n  const [active, setActive] = React.useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [categoryId, setCategoryId] = useState();\r\n  const [franchisePrice, setFranchisePrice] = useState(\"\");\r\n  const [bestSeller, setBestSeller] = React.useState(false);\r\n  const [newArrival, setNewArrival] = React.useState(false);\r\n  const [bestDeal, setBestDeal] = React.useState(false);\r\n  const [discount, setDiscount] = React.useState(false);\r\n  const [discountPrice, setDiscountPrice] = React.useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [fileName, setFileName] = useState([]);\r\n  const [fileName1, setFileName1] = useState();\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getProductById() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      productId: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getProductById`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setCategoryId(result.data.CategoryID.CategoryID);\r\n        setTitle(result.data.Name);\r\n        setActive(result.data.IsActive);\r\n        setPrice(result.data.Price);\r\n        setQuantity(result.data.Quantity);\r\n        setDiscount(result.data.Discount);\r\n        setFranchisePrice(result.data.FrenchisePrice);\r\n        setBestSeller(result.data.IsBestSeller);\r\n        setBestDeal(result.data.IsBestDeal);\r\n        setNewArrival(result.data.IsNewArrival);\r\n        setDiscountPrice(result.data.DiscountPrice);\r\n        setDescription(result.data.Description);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n  React.useEffect(() => {\r\n    getProductById();\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0]);\r\n    setFileName(event.target.value);\r\n  }\r\n\r\n  function handleChange1(event) {\r\n    setFile1(event.target.files);\r\n    setFileName1(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    var formdata = new FormData();\r\n    formdata.append(\"adminId\", localStorage.getItem(\"userId\"));\r\n    formdata.append(\"productId\", params.id);\r\n    formdata.append(\"name\", title);\r\n    formdata.append(\"active\", active);\r\n    formdata.append(\"price\", price);\r\n    formdata.append(\"quantity\", quantity);\r\n    formdata.append(\"description\", description);\r\n    formdata.append(\"categoryId\", categoryId);\r\n    formdata.append(\"img\", file);\r\n    for(const key of Object.keys(file1)){\r\n      formdata.append('images',file1[key]);\r\n    }\r\n    formdata.append(\"frenchisePrice\", franchisePrice);\r\n    formdata.append(\"discount\", discount);\r\n    formdata.append(\"discountPrice\", discountPrice);\r\n    formdata.append(\"isNew\", newArrival);\r\n    formdata.append(\"isBestSeller\", bestSeller);\r\n    formdata.append(\"isBestDeal\", bestDeal);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}updateProduct`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/product\");\r\n          toast.success(\"Updated Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  function getAllCategory() {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllCategory`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setRows(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <MainCard title=\"Edit Product\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"category\"\r\n                name=\"category\"\r\n                inputProps={{ maxLength: 30 }}\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Enter category title\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"Enter Price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Franchise Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={franchisePrice}\r\n                onChange={(e) => setFranchisePrice(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Quantity</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 3);\r\n                }}\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                placeholder=\"Enter Quantity\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose Category</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={categoryId}\r\n                key={categoryId}\r\n                onChange={(e) => setCategoryId(e.target.value)}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.CategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Seller</InputLabel>\r\n              <Select\r\n                id=\"best-seller\"\r\n                name=\"best-seller\"\r\n                value={bestSeller}\r\n                onChange={(e) => setBestSeller(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>New Arrival</InputLabel>\r\n              <Select\r\n                id=\"new-arrival\"\r\n                name=\"new-arrival\"\r\n                value={newArrival}\r\n                onChange={(e) => setNewArrival(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Deal</InputLabel>\r\n              <Select\r\n                id=\"best-deal\"\r\n                name=\"best-deal\"\r\n                value={bestDeal}\r\n                onChange={(e) => setBestDeal(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack>\r\n              <InputLabel required>Description</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"discription\"\r\n                name=\"discription\"\r\n                inputProps={{ maxLength: 250 }}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Add Description\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Discount</InputLabel>\r\n              <Select\r\n                id=\"discount\"\r\n                name=\"discount\"\r\n                value={discount}\r\n                key={discount}\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          {discount ? (\r\n            <Grid item xs={6} md={6}>\r\n              <Stack>\r\n                <InputLabel required>Discount Price</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onInput={(e) => {\r\n                    e.target.value = Math.max(0, parseFloat(e.target.value))\r\n                      .toString()\r\n                      .slice(0, 6);\r\n                  }}\r\n                  type=\"number\"\r\n                  value={discountPrice}\r\n                  onChange={(e) => setDiscountPrice(e.target.value)}\r\n                  placeholder=\"Enter product price\"\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel>Cover Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  value={fileName}\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange}\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose Mutiple Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  multiple\r\n                  value={fileName1}\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange1}\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName1}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Update Product\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","params","useParams","navigate","useNavigate","useState","file","setFile","file1","setFile1","React","title","setTitle","price","setPrice","quantity","setQuantity","rows","setRows","active","setActive","isLoading","setIsLoading","categoryId","setCategoryId","franchisePrice","setFranchisePrice","bestSeller","setBestSeller","newArrival","setNewArrival","bestDeal","setBestDeal","discount","setDiscount","discountPrice","setDiscountPrice","description","setDescription","fileName","setFileName","fileName1","setFileName1","myHeaders","Headers","append","process","localStorage","getItem","raw","JSON","stringify","adminId","productId","id","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","CategoryID","Name","IsActive","Price","Quantity","Discount","FrenchisePrice","IsBestSeller","IsBestDeal","IsNewArrival","DiscountPrice","Description","catch","error","console","log","getProductById","useEffect","getAllCategory","action","onSubmit","event","preventDefault","formdata","FormData","Object","keys","key","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","container","spacing","gridSpacing","item","xs","md","required","fullWidth","name","inputProps","maxLength","value","onChange","e","target","placeholder","onInput","Math","max","parseInt","toString","slice","type","map","row","i","parseFloat","className","accept","files","for","multiple","variant"],"sourceRoot":""}