{"version":3,"file":"static/js/3057.4ca18bb6.chunk.js","mappings":"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","sources":["views/utilities/order-history/completeOrder.js","../node_modules/@mui/icons-material/Download.js"],"sourcesContent":["import React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Grid } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  IconButton,\r\n  Stack,\r\n  Tooltip,\r\n  Chip,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default function PurchaseHistory() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [active, setActive] = React.useState(\"\");\r\n  const [file, setFile] = useState();\r\n  const [editcategoryname, setEditCategoryName] = React.useState(\"\");\r\n  const [editcategoryid, setEditCategoryId] = React.useState(\"\");\r\n  const [editActive, setEditActive] = React.useState(\"\");\r\n  const [editopen, setEditOpen] = React.useState(false);\r\n  const handleEditClose = () => setEditOpen(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = useState(\"\");\r\n  const params = useParams();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 600,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainCard\r\n        title={\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">Order History</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        content={false}\r\n      >\r\n        {/* {rows ? ( */}\r\n        <Card>\r\n          <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n            <TableContainer sx={{ maxHeight: 540 }}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell sx={{ pl: 3 }}>S No.</TableCell>\r\n                    <TableCell>Farmer Name</TableCell>\r\n                    <TableCell>Product Name</TableCell>\r\n                    <TableCell>Price</TableCell>\r\n                    <TableCell>Franshice ID</TableCell>\r\n                    <TableCell>Order Date</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                      Actions\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {/* {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                      return ( */}\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    // key={row.code}\r\n                  >\r\n                    <TableCell align=\"start\">\r\n                      {/* {index + 1} */}\r\n                      1.\r\n                    </TableCell>\r\n                    <TableCell align=\"start\">\r\n                      {/* {row.UserID.Name} */}\r\n                      Ratnesh\r\n                    </TableCell>\r\n                    <TableCell align=\"start\">\r\n                      {/* {row.UserID.Email} */}\r\n                      Rama Zyme\r\n                    </TableCell>\r\n                    <TableCell align=\"start\">\r\n                      {/* {row.Amount} */}\r\n                      2051 /-\r\n                    </TableCell>\r\n                    <TableCell align=\"start\">\r\n                      {/* {row.TransacationId} */}\r\n                      664654515Id\r\n                    </TableCell>\r\n                    <TableCell align=\"start\">\r\n                      18-10-2023\r\n                      {/* {format(new Date(row.PaymentDate), 'E, MMM d yyyy')} */}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {/* { ? ( */}\r\n                      <Chip label=\"Completed\" color=\"success\" size=\"small\" />\r\n                      {/* ) : ( */}\r\n                      {/* <Chip label=\"Pending\" color=\"error\" size=\"small\" /> */}\r\n                      {/* )} */}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        {/* <Tooltip placement=\"top\" title=\"view\">\r\n                          <Link to={`/view-purchase-history/${row.PaymentID}`} \r\n                          onClick={()=>handleHistory(row.PaymentID)}\r\n                          >\r\n\r\n                          <IconButton\r\n                            color=\"primary\"\r\n                            aria-label=\"view\"\r\n                            size=\"large\"\r\n                          >\r\n                            <RemoveRedEyeIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                          </IconButton>\r\n                          </Link>\r\n                        </Tooltip> */}\r\n                        <Tooltip placement=\"top\" title=\"view\">\r\n                          {/* <Link to={`/view-purchase-history/${row.PaymentID}`}  */}\r\n                          {/* onClick={()=>handleHistory(row.PaymentID)} */}\r\n                          {/* > */}\r\n\r\n                          <IconButton\r\n                            color=\"primary\"\r\n                            aria-label=\"download\"\r\n                            size=\"large\"\r\n                          >\r\n                            <DownloadIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                          </IconButton>\r\n                          {/* </Link> */}\r\n                        </Tooltip>\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  {/* );\r\n                    })} */}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 20, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </Card>\r\n        {/* ) : (\r\n        <>\r\n          <br></br>\r\n          <center>\r\n              <CircularProgress />\r\n            </center>\r\n        </>\r\n      )} */}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n\r\n// export default PurchaseHistory\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');\n\nexports.default = _default;"],"names":["PurchaseHistory","React","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","useParams","title","container","alignItems","justifyContent","spacing","gridSpacing","item","variant","content","sx","width","overflow","maxHeight","stickyHeader","pl","align","pr","hover","role","tabIndex","label","color","size","direction","placement","fontSize","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","value","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}