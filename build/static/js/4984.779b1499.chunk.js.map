{"version":3,"file":"static/js/4984.779b1499.chunk.js","mappings":"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","sources":["api/index.api.js","api/role.api.js","conffigs/endpoints.config.js","ui-component/extended/Form/InputLabel.js","views/utilities/Staff Management/CreateUser.js"],"sourcesContent":["import axios from \"axios\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nexport class HttpClient {\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = async ({ response, config }) => {\r\n    const originalRequest = config;\r\n    if (response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      return this.instance(originalRequest);\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n  };\r\n}\r\n\r\nexport default HttpClient;\r\n","import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../conffigs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass Role extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"Authkey\"] = process.env.REACT_APP_AUTH_KEY;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllRoleConfig = ApiRoutes.Role.All;\r\n  RoleByIdConfig = ApiRoutes.Role.RoleById;\r\n  AddRoleConfig = ApiRoutes.Role.AddRole;\r\n  EditRoleConfig = ApiRoutes.Role.EditRole;\r\n  DeleteRoleConfig = ApiRoutes.Role.DeleteRole;\r\n\r\n  getAllRole = async () => {\r\n    return this.instance({\r\n      method: this.AllRoleConfig.Method,\r\n      url: this.AllRoleConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getRoleById = async (data) => {\r\n    return this.instance({\r\n      method: this.RoleByIdConfig.Method,\r\n      url: this.RoleByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addRole = async (data) => {\r\n    return this.instance({\r\n      method: this.AddRoleConfig.Method,\r\n      url: this.AddRoleConfig.Endpoint,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: data,\r\n    });\r\n  };\r\n  editRole = async (data) => {\r\n    return this.instance({\r\n      method: this.EditRoleConfig.Method,\r\n      url: this.EditRoleConfig.Endpoint,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: data,\r\n    });\r\n  };\r\n  deleteRole = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteRoleConfig.Method,\r\n      url: this.DeleteRoleConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Role;\r\n","export const HttpMethod = {\r\n  Get: \"GET\",\r\n  Post: \"POST\",\r\n  Put: \"PUT\",\r\n  Patch: \"PATCH\",\r\n  Delete: \"DELETE\",\r\n};\r\n\r\nconst ApiRoutes = {\r\n  Dashboard: {\r\n    Data: {\r\n      Endpoint: \"/dashboard\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Auth: {\r\n    Login: {\r\n      Endpoint: \"/login\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  User: {\r\n    All: {\r\n      Endpoint: \"/getAllUser\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    UserById: {\r\n      Endpoint: \"/getUserById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Banner: {\r\n    All: {\r\n      Endpoint: \"/getAllBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    BannerById: {\r\n      Endpoint: \"/getBannerById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddBanner: {\r\n      Endpoint: \"/addBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditBanner: {\r\n      Endpoint: \"/updateBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteBanner: {\r\n      Endpoint: \"/deleteBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Category: {\r\n    All: {\r\n      Endpoint: \"/getAllCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CategoryById: {\r\n      Endpoint: \"/getCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCategory: {\r\n      Endpoint: \"/addCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCategory: {\r\n      Endpoint: \"/updateCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Attendence: {\r\n    All: {\r\n      Endpoint: \"/getAllAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AttendenceById: {\r\n      Endpoint: \"/getAttendenceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddAttendence: {\r\n      Endpoint: \"/addAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditAttendence: {\r\n      Endpoint: \"/updateAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteAttendence: {\r\n      Endpoint: \"/deleteAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Holiday: {\r\n    All: {\r\n      Endpoint: \"/getAllHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    HolidayById: {\r\n      Endpoint: \"/getHolidayById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddHoliday: {\r\n      Endpoint: \"/addHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditHoliday: {\r\n      Endpoint: \"/updateHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteHoliday: {\r\n      Endpoint: \"/deleteHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Service: {\r\n    All: {\r\n      Endpoint: \"/getAllService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ServiceById: {\r\n      Endpoint: \"/getServiceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddService: {\r\n      Endpoint: \"/addService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditService: {\r\n      Endpoint: \"/updateService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteService: {\r\n      Endpoint: \"/deleteService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  SubCategory: {\r\n    All: {\r\n      Endpoint: \"/getAllSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    SubCategoryById: {\r\n      Endpoint: \"/getSubCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    subCategoryByCategoryIdConfig: {\r\n      Endpoint: \"/getSubCategoryByCategoryId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddSubCategory: {\r\n      Endpoint: \"/addSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditSubCategory: {\r\n      Endpoint: \"/updateSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteSubCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Product: {\r\n    All: {\r\n      Endpoint: \"/getAllProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllProductFrencise: {\r\n      Endpoint: \"/getFranchiseProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ProductById: {\r\n      Endpoint: \"/getProductById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddProduct: {\r\n      Endpoint: \"/addProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    addProductVarients: {\r\n      Endpoint: \"/addProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProduct: {\r\n      Endpoint: \"/updateProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProductVariant: {\r\n      Endpoint: \"/updateProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteProduct: {\r\n      Endpoint: \"/deleteProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Frencise: {\r\n    All: {\r\n      Endpoint: \"/getAllFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseAccept: {\r\n      Endpoint: \"/getAllFrenciseAccept\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseById: {\r\n      Endpoint: \"/getFrenciseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseCheck: {\r\n      Endpoint: \"/frenciseCheck\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFrencise: {\r\n      Endpoint: \"/addFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFrencise: {\r\n      Endpoint: \"/editFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFrencise: {\r\n      Endpoint: \"/deleteFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Role: {\r\n    All: {\r\n      Endpoint: \"/getAllRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    RoleById: {\r\n      Endpoint: \"/getRoleById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddRole: {\r\n      Endpoint: \"/addRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditRole: {\r\n      Endpoint: \"/updateRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteRole: {\r\n      Endpoint: \"/deleteRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Staff: {\r\n    All: {\r\n      Endpoint: \"/getAllStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StaffById: {\r\n      Endpoint: \"/getStaffById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddStaff: {\r\n      Endpoint: \"/addStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditStaff: {\r\n      Endpoint: \"/updateStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteStaff: {\r\n      Endpoint: \"/deleteStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Farmer: {\r\n    All: {\r\n      Endpoint: \"/getAllServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FarmerById: {\r\n      Endpoint: \"/getServiceRequestById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFarmer: {\r\n      Endpoint: \"/addServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFarmer: {\r\n      Endpoint: \"/updateFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFarmer: {\r\n      Endpoint: \"/deleteFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  District: {\r\n    AllDistrict: {\r\n      Endpoint: \"/getAllDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictById: {\r\n      Endpoint: \"/getDistrictById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictByStateId: {\r\n      Endpoint: \"/getCityByStateId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddDistrict: {\r\n      Endpoint: \"/addDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditDistrict: {\r\n      Endpoint: \"/updateDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteDistrict: {\r\n      Endpoint: \"/deleteDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  State: {\r\n    AllState: {\r\n      Endpoint: \"/getAllState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StateById: {\r\n      Endpoint: \"/getStateById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddState: {\r\n      Endpoint: \"/addState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditState: {\r\n      Endpoint: \"/updateState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteState: {\r\n      Endpoint: \"/deleteState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  ZipCode: {\r\n    AllZipCode: {\r\n      Endpoint: \"/getAllZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ZipCodeById: {\r\n      Endpoint: \"/getZipById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddZipCode: {\r\n      Endpoint: \"/addZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditZipCode: {\r\n      Endpoint: \"/editZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteZipCode: {\r\n      Endpoint: \"/deleteZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseState: {\r\n    AllFranchiseState: {\r\n      Endpoint: \"/getAllStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseStateById: {\r\n      Endpoint: \"/getStateFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseState: {\r\n      Endpoint: \"/addStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseState: {\r\n      Endpoint: \"/editStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseState: {\r\n      Endpoint: \"/deleteStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseDistrict: {\r\n    AllFranchiseDistrict: {\r\n      Endpoint: \"/getAllDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseDistrictById: {\r\n      Endpoint: \"/getDistrictFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseDistrict: {\r\n      Endpoint: \"/addDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseDistrict: {\r\n      Endpoint: \"/editDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseDistrict: {\r\n      Endpoint: \"/deleteDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseBlock: {\r\n    AllFranchiseBlock: {\r\n      Endpoint: \"/getAllBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseBlockById: {\r\n      Endpoint: \"/getBlockFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseBlock: {\r\n      Endpoint: \"/addBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseBlock: {\r\n      Endpoint: \"/editBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseBlock: {\r\n      Endpoint: \"/deleteBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseCluster: {\r\n    AllFranchiseCluster: {\r\n      Endpoint: \"/getAllClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseClusterById: {\r\n      Endpoint: \"/getClusterFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseCluster: {\r\n      Endpoint: \"/addClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseCluster: {\r\n      Endpoint: \"/editClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseCluster: {\r\n      Endpoint: \"/deleteClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseVillage: {\r\n    AllFranchiseVillage: {\r\n      Endpoint: \"/getAllVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseVillageById: {\r\n      Endpoint: \"/getVillageFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseVillage: {\r\n      Endpoint: \"/addVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseVillage: {\r\n      Endpoint: \"/editVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseVillage: {\r\n      Endpoint: \"/deleteVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Commissiom: {\r\n    All: {\r\n      Endpoint: \"/getAllCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CommissiomById: {\r\n      Endpoint: \"/getCommissionById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCommissiom: {\r\n      Endpoint: \"/addCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCommissiom: {\r\n      Endpoint: \"/updateCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCommissiom: {\r\n      Endpoint: \"/deleteCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n};\r\n\r\nexport default ApiRoutes;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    horizontal: PropTypes.bool\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Stack,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RoleApi from \"../../../api/role.api\";\r\nimport { updateAllRole } from \"../../../redux/redux-slice/role.slice\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [data, setData] = React.useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const roleApi = new RoleApi();\r\n  const rows = useSelector((state) => state.role.Role);\r\n\r\n  const getAllRole = useCallback(async () => {\r\n    try {\r\n      const role = await roleApi.getAllRole();\r\n      if (!role || !role.data.data) {\r\n        return toast.error(\"no latest banners available\");\r\n      } else {\r\n        dispatch(updateAllRole(role.data.data));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllRole();\r\n  }, []);\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\r\n    \"Authorization\",\r\n    \"Bearer \" + localStorage.getItem(\"token\")\r\n  );\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function addStaff(e) {\r\n    e.preventDefault();\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      roleId: role,\r\n      password: password,\r\n      userName: name,\r\n      email: email,\r\n      phone: phone,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}addStaff`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        navigate(\"/staff-users\")\r\n        setData(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isEmailValid, setIsEmailValid] = useState(false);\r\n  const [emailMessage, setEmailMessage] = useState(\"\");\r\n  const phoneValidation = () => {\r\n    const regex =  /^[6-9]\\d{9}$/;\r\n    return !(!phone || regex.test(phone) === false);\r\n  };\r\n\r\n  const phoneValid = () => {\r\n    const isPhoneValid = phoneValidation();\r\n    setIsValid(isPhoneValid);\r\n    setMessage(isPhoneValid ? <></> : \"Phone Number not valid!\" );\r\n  } \r\n\r\n  const emailValidation = () => {\r\n    const regexEmail = /^[A-Z0-9._%+-]+@([A-Z0-9-]+.)+[A-Z]{2,4}$/i;\r\n    return !(!email || regexEmail.test(email) === false);\r\n  };\r\n\r\n  const emailValid = () => {\r\n    const isEmailValid = emailValidation();\r\n    setIsEmailValid(isEmailValid);\r\n    setEmailMessage(isEmailValid ? <></> : \"Email not valid!\" );\r\n  } \r\n\r\n  return (\r\n    <MainCard title=\"Add User\">\r\n      <form onSubmit={addStaff} action=\"#\">\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter Name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose Role</InputLabel>\r\n              <Select\r\n                id=\"role\"\r\n                name=\"role\"\r\n                defaultValue=\"Sales Manager\"\r\n                onChange={(e) => setRole(e.target.value)}\r\n              >\r\n                {rows.map((row, index) => (\r\n                  <MenuItem value={row.roleId} key={index}>\r\n                    {row.name}\r\n                  </MenuItem>\r\n                 ))}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Email</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"Email\"\r\n                name=\"Email\"\r\n                type=\"email\"\r\n                onBlur={emailValid}\r\n                inputProps={{ maxLength: 40 }}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter Email\"\r\n              />\r\n              <p style={{color:'red'}}>{emailMessage}</p>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Phone</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"Phone\"\r\n                name=\"Phone\"\r\n                type=\"number\"\r\n                onBlur={phoneValid}\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 10);\r\n                }}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                placeholder=\"Enter Phone Number\"\r\n              />\r\n              <p style={{color:'red'}}>{message}</p>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Password</InputLabel>\r\n              <TextField\r\n                type=\"password\"\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br/>\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Add User\r\n        </Button>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["HttpClient","baseURL","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","config","originalRequest","status","_retry","Promise","resolve","this","axios","Role","process","_initializeRequestInterceptor","request","headers","getTokenLocal","AllRoleConfig","ApiRoutes","RoleByIdConfig","AddRoleConfig","EditRoleConfig","DeleteRoleConfig","getAllRole","method","Method","url","Endpoint","getRoleById","addRole","editRole","deleteRole","HttpMethod","Dashboard","Data","Auth","Login","User","All","UserById","Banner","BannerById","AddBanner","EditBanner","DeleteBanner","Category","CategoryById","AddCategory","EditCategory","DeleteCategory","Attendence","AttendenceById","AddAttendence","EditAttendence","DeleteAttendence","Holiday","HolidayById","AddHoliday","EditHoliday","DeleteHoliday","Service","ServiceById","AddService","EditService","DeleteService","SubCategory","SubCategoryById","subCategoryByCategoryIdConfig","AddSubCategory","EditSubCategory","DeleteSubCategory","Product","AllProductFrencise","ProductById","AddProduct","addProductVarients","EditProduct","EditProductVariant","DeleteProduct","Frencise","FrenciseAccept","FrenciseById","FrenciseCheck","AddFrencise","EditFrencise","DeleteFrencise","RoleById","AddRole","EditRole","DeleteRole","Staff","StaffById","AddStaff","EditStaff","DeleteStaff","Farmer","FarmerById","AddFarmer","EditFarmer","DeleteFarmer","District","AllDistrict","DistrictById","DistrictByStateId","AddDistrict","EditDistrict","DeleteDistrict","State","AllState","StateById","AddState","EditState","DeleteState","ZipCode","AllZipCode","ZipCodeById","AddZipCode","EditZipCode","DeleteZipCode","FranchiseState","AllFranchiseState","FranchiseStateById","AddFranchiseState","EditFranchiseState","DeleteFranchiseState","FranchiseDistrict","AllFranchiseDistrict","FranchiseDistrictById","AddFranchiseDistrict","EditFranchiseDistrict","DeleteFranchiseDistrict","FranchiseBlock","AllFranchiseBlock","FranchiseBlockById","AddFranchiseBlock","EditFranchiseBlock","DeleteFranchiseBlock","FranchiseCluster","AllFranchiseCluster","FranchiseClusterById","AddFranchiseCluster","EditFranchiseCluster","DeleteFranchiseCluster","FranchiseVillage","AllFranchiseVillage","FranchiseVillageById","AddFranchiseVillage","EditFranchiseVillage","DeleteFranchiseVillage","Commissiom","CommissiomById","AddCommissiom","EditCommissiom","DeleteCommissiom","BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","navigate","useNavigate","useState","name","setName","email","setEmail","phone","setPhone","role","setRole","password","setPassword","React","setData","dispatch","useDispatch","roleApi","RoleApi","rows","useSelector","state","useCallback","toast","updateAllRole","console","error","useEffect","myHeaders","Headers","append","localStorage","getItem","message","setMessage","setIsValid","setIsEmailValid","emailMessage","setEmailMessage","title","onSubmit","e","preventDefault","raw","JSON","stringify","adminId","roleId","userName","requestOptions","body","redirect","fetch","then","json","result","catch","log","action","container","spacing","gridSpacing","item","xs","md","required","fullWidth","id","value","onChange","target","placeholder","defaultValue","map","row","index","type","onBlur","isEmailValid","test","inputProps","maxLength","style","isPhoneValid","onInput","Math","max","parseInt","toString","slice","variant"],"sourceRoot":""}