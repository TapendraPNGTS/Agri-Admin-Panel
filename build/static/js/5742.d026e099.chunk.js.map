{"version":3,"file":"static/js/5742.d026e099.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/manage-area/pin-code/add-pin-code.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [rows, setRows] = React.useState([]);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [district, setDistrict] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getAllDistrict() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllDistrict`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setRows(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getAllDistrict();\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      districtId: district,\r\n      code: name,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}addZip`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/pin-code\");\r\n          toast.success(\"Added Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"Add Pin Code\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose District</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={district}\r\n                onChange={(e) => setDistrict(e.target.value)}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.DistrictID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Pin Code</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"state\"\r\n                name=\"state\"\r\n                inputProps={{ maxLength: 30 }}\r\n                type=\"number\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter State Name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Add Pin Code\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","useParams","navigate","useNavigate","React","rows","setRows","name","setName","district","setDistrict","useState","isLoading","setIsLoading","myHeaders","Headers","append","process","localStorage","getItem","useEffect","raw","JSON","stringify","adminId","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","catch","error","console","log","getAllDistrict","title","action","onSubmit","event","preventDefault","districtId","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","container","spacing","gridSpacing","item","xs","md","required","id","value","onChange","e","target","map","row","i","DistrictID","Name","fullWidth","inputProps","maxLength","type","onInput","Math","max","parseInt","toString","slice","placeholder","variant"],"sourceRoot":""}