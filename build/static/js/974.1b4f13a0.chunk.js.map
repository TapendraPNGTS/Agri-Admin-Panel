{"version":3,"file":"static/js/974.1b4f13a0.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthVerifyOtp.js","views/pages/authentication/authentication3/VerifyOtp.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import { useState, useEffect } from \"react\";\r\n// import { useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Stack,\r\n} from \"@mui/material\";\r\n\r\n// third party\r\nimport { Formik } from \"formik\";\r\n\r\n// project imports\r\nimport useScriptRef from \"hooks/useScriptRef\";\r\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\r\n\r\n// import Google from 'assets/images/icons/social-google.svg';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ loginProp, ...others }) => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  if (!localStorage.getItem(\"token\") === \"\") {\r\n    window.location.href = \"/dashboard\";\r\n  } else if (localStorage.getItem(\"token\") === \"\") {\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  const theme = useTheme();\r\n  const scriptedRef = useScriptRef();\r\n  // const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerify, setIsVerify] = useState(false);\r\n\r\n  const [newPassword, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [staffId, setStaffId] = useState(\"\");\r\n\r\n  const handleNewPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const validatePasswords = () => {\r\n    if (newPassword !== confirmPassword) {\r\n      return \"Passwords do not match.\";\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      return \"Password must be at least 6 characters.\";\r\n    }\r\n\r\n    return \"\"; // No errors\r\n  };\r\n\r\n  function getAllBanner() {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      token: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}verifyEmailToken`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          setStaffId(result.data.StaffID);\r\n          setIsVerify(true);\r\n        } else {\r\n          setIsVerify(false);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllBanner();\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const error = validatePasswords();\r\n\r\n    if (error) {\r\n      setPasswordError(error);\r\n    } else {\r\n      setPasswordError(\"\"); // Clear any previous error\r\n      alert(\"Passwords are valid!\"); // Replace with your actual submission logic\r\n    }\r\n    setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      adminId: staffId,\r\n      password: newPassword,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}forgetPassword`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/\");\r\n          toast.success(\"Change Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else if (result.code == 201) {\r\n          setIsLoading(false);\r\n          toast.error(result.message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          submit: null,\r\n        }}\r\n      >\r\n        {isVerify ? (\r\n          <>\r\n            <form noValidate onSubmit={handleSubmit} {...others}>\r\n              <FormControl fullWidth sx={{ ...theme.typography.customInput }}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password-login\">\r\n                  New Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password-login\"\r\n                  type={\"number\"}\r\n                  name=\"new-password\"\r\n                  value={newPassword}\r\n                  label=\"New Password\"\r\n                  onChange={handleNewPasswordChange}\r\n                />\r\n              </FormControl>\r\n              <FormControl fullWidth sx={{ ...theme.typography.customInput }}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password-login\">\r\n                  Confirm Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password-login\"\r\n                  type={\"number\"}\r\n                  name=\"confirm-password\"\r\n                  value={confirmPassword}\r\n                  label=\"Confirm Password\"\r\n                  onChange={handleConfirmPasswordChange}\r\n                />\r\n              </FormControl>\r\n              <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                spacing={1}\r\n              ></Stack>\r\n\r\n              <Box sx={{ mt: 2 }}>\r\n                {isLoading ? (\r\n                  <Spinner animation=\"grow\" />\r\n                ) : (\r\n                  <AnimateButton>\r\n                    <Button\r\n                      disableElevation\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      Verify OTP\r\n                    </Button>\r\n                  </AnimateButton>\r\n                )}\r\n              </Box>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <><center><span style={{color:'red'}}>The Token Is expire</span></center></>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Divider, Grid, Typography, useMediaQuery } from \"@mui/material\";\r\n\r\n// project imports\r\nimport AuthWrapper1 from \"../AuthWrapper1\";\r\nimport AuthCardWrapper from \"../AuthCardWrapper\";\r\nimport Logo from '../../../../assets/images/MY_AGRI_INPUT2.svg';\r\nimport AuthVerifyOtp from \"../auth-forms/AuthVerifyOtp\";\r\nimport useAuth from \"hooks/useAuth\";\r\n\r\n// ============================|| AUTH3 - FORGOT PASSWORD ||============================ //\r\n\r\nconst ForgotPassword = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <AuthWrapper1>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"flex-end\"\r\n        sx={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            sx={{ minHeight: \"calc(100vh - 68px)\" }}\r\n          >\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item sx={{ mb: 3 }}>\r\n                    <Link to=\"#\">\r\n                      <img src={Logo} alt=\"My Agri Input\" />\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid\r\n                      container\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                      textAlign=\"center\"\r\n                      spacing={2}\r\n                    >\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          color={theme.palette.secondary.main}\r\n                          gutterBottom\r\n                          variant={matchDownSM ? \"h3\" : \"h2\"}\r\n                        >\r\n                          Verify OTP\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          fontSize=\"16px\"\r\n                          textAlign=\"center\"\r\n                        >\r\n                          Enter your OTP below and we&apos;ll allow you\r\n                          to reset password.\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AuthVerifyOtp />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper1>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["scripted","useRef","useEffect","current","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","loginProp","others","navigate","useNavigate","params","useParams","localStorage","getItem","window","location","href","useTheme","useScriptRef","useState","isLoading","setIsLoading","isVerify","setIsVerify","newPassword","setPassword","confirmPassword","setConfirmPassword","setPasswordError","staffId","setStaffId","myHeaders","Headers","append","process","requestOptions","method","headers","body","JSON","stringify","token","id","redirect","fetch","then","response","json","result","code","data","StaffID","catch","error","console","log","getAllBanner","initialValues","email","password","submit","noValidate","onSubmit","event","preventDefault","length","alert","adminId","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","message","FormControl","fullWidth","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","name","value","label","onChange","e","target","Stack","direction","alignItems","justifyContent","spacing","Box","mt","Spinner","animation","AnimateButton","Button","disableElevation","size","variant","color","style","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","m","mb","AuthCardWrapper","to","src","Logo","alt","textAlign","Typography","secondary","main","gutterBottom","fontSize","AuthVerifyOtp","Divider","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","DEFAULT_BREAKPOINTS","ThemeContext","React","prefixes","minBreakpoint","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","ref","bsPrefix","as","Component","className","props","bsSpinnerPrefix","_jsx","displayName"],"sourceRoot":""}