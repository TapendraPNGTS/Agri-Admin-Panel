{"version":3,"file":"static/js/1749.5365b909.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/commission/edit-commission.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    horizontal: PropTypes.bool\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [commission, setCommission] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getCommissionById() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      commissionId: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getCommissionById`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setName(result.data.Name);\r\n        setCommission(result.data.Commission);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getCommissionById();\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      commission: commission,\r\n      name: name,\r\n      commissionId: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}updateCommission`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/commission\");\r\n          toast.success(\"Added Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"Add District\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"state\"\r\n                name=\"state\"\r\n                inputProps={{ maxLength: 30 }}\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter State Name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Commissiom (in%)</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"state\"\r\n                name=\"state\"\r\n                type=\"number\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                value={commission}\r\n                onChange={(e) => setCommission(e.target.value)}\r\n                placeholder=\"Enter State Name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Update Commissiom\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","params","useParams","navigate","useNavigate","React","name","setName","commission","setCommission","useState","isLoading","setIsLoading","myHeaders","Headers","append","process","localStorage","getItem","raw","JSON","stringify","adminId","commissionId","id","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","Name","Commission","catch","error","console","log","getCommissionById","title","action","onSubmit","event","preventDefault","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","container","spacing","gridSpacing","item","xs","md","required","fullWidth","inputProps","maxLength","value","onChange","e","target","placeholder","type","onInput","Math","max","parseInt","toString","slice","variant"],"sourceRoot":""}