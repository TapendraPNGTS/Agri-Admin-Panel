{"version":3,"file":"static/js/5933.062eac12.chunk.js","mappings":"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","sources":["api/franchiseDistrict.api.js","api/franchiseState.api.js","api/index.api.js","conffigs/endpoints.config.js","ui-component/extended/Form/InputLabel.js","views/utilities/Franchise/franchiseDistrict/add-franchiseDistrict.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../conffigs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass District extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"Authkey\"] = process.env.REACT_APP_AUTH_KEY;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllFranchiseDistrictConfig = ApiRoutes.FranchiseDistrict.AllFranchiseDistrict;\r\n  FranchiseDistrictByIdConfig = ApiRoutes.FranchiseDistrict.FranchiseDistrictById;\r\n  AddFranchiseDistrictConfig = ApiRoutes.FranchiseDistrict.AddFranchiseDistrict;\r\n  EditFranchiseDistrictConfig = ApiRoutes.FranchiseDistrict.EditFranchiseDistrict;\r\n  DeleteFranchiseDistrictConfig = ApiRoutes.FranchiseDistrict.DeleteFranchiseDistrict;\r\n\r\n  getAllDistrictFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.AllFranchiseDistrictConfig.Method,\r\n      url: this.AllFranchiseDistrictConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getDistrictFranchiseById = async (data) => {\r\n    return this.instance({\r\n      method: this.FranchiseDistrictByIdConfig.Method,\r\n      url: this.FranchiseDistrictByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addDistrictFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.AddFranchiseDistrictConfig.Method,\r\n      url: this.AddFranchiseDistrictConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  editDistrictFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.EditFranchiseDistrictConfig.Method,\r\n      url: this.EditFranchiseDistrictConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  deleteDistrictFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteFranchiseDistrictConfig.Method,\r\n      url: this.DeleteFranchiseDistrictConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default District;\r\n","import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../conffigs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass State extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"Authkey\"] = process.env.REACT_APP_AUTH_KEY;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllFranchiseStateConfig = ApiRoutes.FranchiseState.AllFranchiseState;\r\n  FranchiseStateByIdConfig = ApiRoutes.FranchiseState.FranchiseStateById;\r\n  AddFranchiseStateConfig = ApiRoutes.FranchiseState.AddFranchiseState;\r\n  EditFranchiseStateConfig = ApiRoutes.FranchiseState.EditFranchiseState;\r\n  DeleteFranchiseStateConfig = ApiRoutes.FranchiseState.DeleteFranchiseState;\r\n\r\n  getAllStateFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.AllFranchiseStateConfig.Method,\r\n      url: this.AllFranchiseStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getStateFranchiseById = async (data) => {\r\n    return this.instance({\r\n      method: this.FranchiseStateByIdConfig.Method,\r\n      url: this.FranchiseStateByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addStateFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.AddFranchiseStateConfig.Method,\r\n      url: this.AddFranchiseStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  editStateFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.EditFranchiseStateConfig.Method,\r\n      url: this.EditFranchiseStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  deleteStateFranchise = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteFranchiseStateConfig.Method,\r\n      url: this.DeleteFranchiseStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default State;\r\n","import axios from \"axios\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nexport class HttpClient {\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = async ({ response, config }) => {\r\n    const originalRequest = config;\r\n    if (response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      return this.instance(originalRequest);\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n  };\r\n}\r\n\r\nexport default HttpClient;\r\n","export const HttpMethod = {\r\n  Get: \"GET\",\r\n  Post: \"POST\",\r\n  Put: \"PUT\",\r\n  Patch: \"PATCH\",\r\n  Delete: \"DELETE\",\r\n};\r\n\r\nconst ApiRoutes = {\r\n  Dashboard: {\r\n    Data: {\r\n      Endpoint: \"/dashboard\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Auth: {\r\n    Login: {\r\n      Endpoint: \"/login\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  User: {\r\n    All: {\r\n      Endpoint: \"/getAllUser\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    UserById: {\r\n      Endpoint: \"/getUserById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Banner: {\r\n    All: {\r\n      Endpoint: \"/getAllBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    BannerById: {\r\n      Endpoint: \"/getBannerById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddBanner: {\r\n      Endpoint: \"/addBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditBanner: {\r\n      Endpoint: \"/updateBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteBanner: {\r\n      Endpoint: \"/deleteBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Category: {\r\n    All: {\r\n      Endpoint: \"/getAllCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CategoryById: {\r\n      Endpoint: \"/getCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCategory: {\r\n      Endpoint: \"/addCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCategory: {\r\n      Endpoint: \"/updateCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Attendence: {\r\n    All: {\r\n      Endpoint: \"/getAllAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AttendenceById: {\r\n      Endpoint: \"/getAttendenceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddAttendence: {\r\n      Endpoint: \"/addAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditAttendence: {\r\n      Endpoint: \"/updateAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteAttendence: {\r\n      Endpoint: \"/deleteAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Holiday: {\r\n    All: {\r\n      Endpoint: \"/getAllHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    HolidayById: {\r\n      Endpoint: \"/getHolidayById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddHoliday: {\r\n      Endpoint: \"/addHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditHoliday: {\r\n      Endpoint: \"/updateHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteHoliday: {\r\n      Endpoint: \"/deleteHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Service: {\r\n    All: {\r\n      Endpoint: \"/getAllService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ServiceById: {\r\n      Endpoint: \"/getServiceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddService: {\r\n      Endpoint: \"/addService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditService: {\r\n      Endpoint: \"/updateService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteService: {\r\n      Endpoint: \"/deleteService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  SubCategory: {\r\n    All: {\r\n      Endpoint: \"/getAllSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    SubCategoryById: {\r\n      Endpoint: \"/getSubCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    subCategoryByCategoryIdConfig: {\r\n      Endpoint: \"/getSubCategoryByCategoryId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddSubCategory: {\r\n      Endpoint: \"/addSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditSubCategory: {\r\n      Endpoint: \"/updateSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteSubCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Product: {\r\n    All: {\r\n      Endpoint: \"/getAllProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllProductFrencise: {\r\n      Endpoint: \"/getFranchiseProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ProductById: {\r\n      Endpoint: \"/getProductById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddProduct: {\r\n      Endpoint: \"/addProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    addProductVarients: {\r\n      Endpoint: \"/addProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProduct: {\r\n      Endpoint: \"/updateProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProductVariant: {\r\n      Endpoint: \"/updateProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteProduct: {\r\n      Endpoint: \"/deleteProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Frencise: {\r\n    All: {\r\n      Endpoint: \"/getAllFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseAccept: {\r\n      Endpoint: \"/getAllFrenciseAccept\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseById: {\r\n      Endpoint: \"/getFrenciseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseCheck: {\r\n      Endpoint: \"/frenciseCheck\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFrencise: {\r\n      Endpoint: \"/addFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFrencise: {\r\n      Endpoint: \"/editFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFrencise: {\r\n      Endpoint: \"/deleteFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Role: {\r\n    All: {\r\n      Endpoint: \"/getAllRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    RoleById: {\r\n      Endpoint: \"/getRoleById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddRole: {\r\n      Endpoint: \"/addRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditRole: {\r\n      Endpoint: \"/updateRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteRole: {\r\n      Endpoint: \"/deleteRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Staff: {\r\n    All: {\r\n      Endpoint: \"/getAllStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StaffById: {\r\n      Endpoint: \"/getStaffById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddStaff: {\r\n      Endpoint: \"/addStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditStaff: {\r\n      Endpoint: \"/updateStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteStaff: {\r\n      Endpoint: \"/deleteStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Farmer: {\r\n    All: {\r\n      Endpoint: \"/getAllServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FarmerById: {\r\n      Endpoint: \"/getServiceRequestById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFarmer: {\r\n      Endpoint: \"/addServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFarmer: {\r\n      Endpoint: \"/updateFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFarmer: {\r\n      Endpoint: \"/deleteFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  District: {\r\n    AllDistrict: {\r\n      Endpoint: \"/getAllDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictById: {\r\n      Endpoint: \"/getDistrictById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictByStateId: {\r\n      Endpoint: \"/getDistrictByStateId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddDistrict: {\r\n      Endpoint: \"/addDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditDistrict: {\r\n      Endpoint: \"/updateDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteDistrict: {\r\n      Endpoint: \"/deleteDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  State: {\r\n    AllState: {\r\n      Endpoint: \"/getAllState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StateById: {\r\n      Endpoint: \"/getStateById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddState: {\r\n      Endpoint: \"/addState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditState: {\r\n      Endpoint: \"/updateState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteState: {\r\n      Endpoint: \"/deleteState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  ZipCode: {\r\n    AllZipCode: {\r\n      Endpoint: \"/getAllZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ZipCodeById: {\r\n      Endpoint: \"/getZipById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddZipCode: {\r\n      Endpoint: \"/addZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditZipCode: {\r\n      Endpoint: \"/editZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteZipCode: {\r\n      Endpoint: \"/deleteZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseState: {\r\n    AllFranchiseState: {\r\n      Endpoint: \"/getAllStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseStateById: {\r\n      Endpoint: \"/getStateFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseState: {\r\n      Endpoint: \"/addStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseState: {\r\n      Endpoint: \"/editStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseState: {\r\n      Endpoint: \"/deleteStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseDistrict: {\r\n    AllFranchiseDistrict: {\r\n      Endpoint: \"/getAllDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseDistrictById: {\r\n      Endpoint: \"/getDistrictFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseDistrict: {\r\n      Endpoint: \"/addDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseDistrict: {\r\n      Endpoint: \"/editDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseDistrict: {\r\n      Endpoint: \"/deleteDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n};\r\n\r\nexport default ApiRoutes;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    horizontal: PropTypes.bool\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport FranchiseDistrictApi from \"../../../../api/franchiseDistrict.api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FranchiseStateApi from \"../../../../api/franchiseState.api\";\r\nimport { updateAllFranchiseState } from \"../../../../redux/redux-slice/franchiseState.slice\";\r\n\r\nfunction App() {\r\n  const districtApi = new FranchiseDistrictApi();\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  async function handleSubmit(event) {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n    const addServiceRequestResponse = await districtApi.addDistrictFranchise({\r\n      name: name,\r\n      email: email,\r\n      contact: contact,\r\n      stateId: state,\r\n    });\r\n    if (\r\n      addServiceRequestResponse &&\r\n      addServiceRequestResponse?.data?.code === 200\r\n    ) {\r\n      toast.success(`Added successsfully`);\r\n      navigate(\"/franchise-district\", { replace: true });\r\n    } else {\r\n      return toast.error(`Something went wrong!`);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const stateApi = new FranchiseStateApi();\r\n  const rows = useSelector((state) => state.franchiseState.FranchiseState);\r\n\r\n  const getAllState = useCallback(async () => {\r\n    try {\r\n      const state = await stateApi.getAllStateFranchise({});\r\n      if (!state || !state.data.data) {\r\n        return toast.error(\"no latest state available\");\r\n      } else {\r\n        dispatch(updateAllFranchiseState(state.data.data));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllState();\r\n  }, []);\r\n\r\n  return (\r\n    <MainCard title=\"Add District\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"name\"\r\n                name=\"name\"\r\n                inputProps={{ maxLength: 30 }}\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter Name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Email</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"email\"\r\n                name=\"email\"\r\n                inputProps={{ maxLength: 30 }}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter Email\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Contact</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"contact\"\r\n                name=\"contact\"\r\n                type=\"number\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 10);\r\n                }}\r\n                value={contact}\r\n                onChange={(e) => setContact(e.target.value)}\r\n                placeholder=\"Enter Contact Number\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>State</InputLabel>\r\n              <Select\r\n                id=\"state\"\r\n                name=\"state\"\r\n                value={state}\r\n                onChange={(e) => setState(e.target.value)}\r\n              >\r\n                {rows.map(state=>{\r\n                  return(\r\n                    <MenuItem value={state.StateID}>{state.Name}</MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Add District\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["District","process","_initializeRequestInterceptor","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","AllFranchiseDistrictConfig","ApiRoutes","FranchiseDistrictByIdConfig","AddFranchiseDistrictConfig","EditFranchiseDistrictConfig","DeleteFranchiseDistrictConfig","getAllDistrictFranchise","data","method","Method","url","Endpoint","getDistrictFranchiseById","addDistrictFranchise","editDistrictFranchise","deleteDistrictFranchise","HttpClient","State","AllFranchiseStateConfig","FranchiseStateByIdConfig","AddFranchiseStateConfig","EditFranchiseStateConfig","DeleteFranchiseStateConfig","getAllStateFranchise","getStateFranchiseById","addStateFranchise","editStateFranchise","deleteStateFranchise","baseURL","_handleResponse","_handleError","originalRequest","status","_retry","this","axios","HttpMethod","Dashboard","Data","Auth","Login","User","All","UserById","Banner","BannerById","AddBanner","EditBanner","DeleteBanner","Category","CategoryById","AddCategory","EditCategory","DeleteCategory","Attendence","AttendenceById","AddAttendence","EditAttendence","DeleteAttendence","Holiday","HolidayById","AddHoliday","EditHoliday","DeleteHoliday","Service","ServiceById","AddService","EditService","DeleteService","SubCategory","SubCategoryById","subCategoryByCategoryIdConfig","AddSubCategory","EditSubCategory","DeleteSubCategory","Product","AllProductFrencise","ProductById","AddProduct","addProductVarients","EditProduct","EditProductVariant","DeleteProduct","Frencise","FrenciseAccept","FrenciseById","FrenciseCheck","AddFrencise","EditFrencise","DeleteFrencise","Role","RoleById","AddRole","EditRole","DeleteRole","Staff","StaffById","AddStaff","EditStaff","DeleteStaff","Farmer","FarmerById","AddFarmer","EditFarmer","DeleteFarmer","AllDistrict","DistrictById","DistrictByStateId","AddDistrict","EditDistrict","DeleteDistrict","AllState","StateById","AddState","EditState","DeleteState","ZipCode","AllZipCode","ZipCodeById","AddZipCode","EditZipCode","DeleteZipCode","FranchiseState","AllFranchiseState","FranchiseStateById","AddFranchiseState","EditFranchiseState","DeleteFranchiseState","FranchiseDistrict","AllFranchiseDistrict","FranchiseDistrictById","AddFranchiseDistrict","EditFranchiseDistrict","DeleteFranchiseDistrict","BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","districtApi","FranchiseDistrictApi","navigate","useParams","useNavigate","React","name","setName","useState","isLoading","setIsLoading","email","setEmail","contact","setContact","state","setState","event","preventDefault","stateId","addServiceRequestResponse","code","toast","replace","dispatch","useDispatch","stateApi","FranchiseStateApi","rows","useSelector","franchiseState","getAllState","useCallback","updateAllFranchiseState","console","error","useEffect","title","action","onSubmit","container","spacing","gridSpacing","item","xs","md","required","fullWidth","id","inputProps","maxLength","value","onChange","e","target","placeholder","type","onInput","Math","max","parseInt","toString","slice","map","StateID","Name","variant"],"sourceRoot":""}