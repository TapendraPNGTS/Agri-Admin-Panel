{"version":3,"file":"static/js/5969.1163440b.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/product/add-product.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState([]);\r\n  const [fileName, setFileName] = useState([]);\r\n  const [file1, setFile1] = useState([]);\r\n  const [fileName1, setFileName1] = useState();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [price, setPrice] = React.useState(\"\");\r\n  const [quantity, setQuantity] = React.useState(\"\");\r\n  const [active, setActive] = React.useState(true);\r\n  const [rows, setRows] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [franchisePrice, setFranchisePrice] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bestSeller, setBestSeller] = React.useState(false);\r\n  const [newArrival, setNewArrival] = React.useState(false);\r\n  const [bestDeal, setBestDeal] = React.useState(false);\r\n  const [discount, setDiscount] = React.useState(false);\r\n  const [discountPrice, setDiscountPrice] = React.useState(0);\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0]);\r\n    setFileName(event.target.value);\r\n  }\r\n  function handleChange1(event) {\r\n    setFile1(event.target.files[0]);\r\n    setFileName1(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    var formdata = new FormData();\r\n    formdata.append(\"adminId\", localStorage.getItem(\"userId\"));\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"description\", description);\r\n    formdata.append(\"price\", price);\r\n    formdata.append(\"categoryId\", category);\r\n    formdata.append(\"quantity\", quantity);\r\n    formdata.append(\"active\", active);\r\n    formdata.append(\"img\", file);\r\n    for(const key of Object.keys(file1)){\r\n      formdata.append('images',file1[key]);\r\n    }\r\n    formdata.append(\"frenchisePrice\", franchisePrice);\r\n    formdata.append(\"discount\", discount);\r\n    formdata.append(\"discountPrice\", discountPrice);\r\n    formdata.append(\"isNew\", newArrival);\r\n    formdata.append(\"isBestSeller\", bestSeller);\r\n    formdata.append(\"isBestDeal\", bestDeal);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}addProduct`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/product\");\r\n          toast.success(\"Added Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  function getAllCategory() {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllCategory`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setRows(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <MainCard title=\"Add Product\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"product\"\r\n                inputProps={{ maxLength: 30 }}\r\n                name=\"product\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter product name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Franchise Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={franchisePrice}\r\n                onChange={(e) => setFranchisePrice(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Quantity</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 3);\r\n                }}\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                placeholder=\"Enter quantity\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose Category</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.CategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack>\r\n              <InputLabel required>Description</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"discription\"\r\n                name=\"discription\"\r\n                inputProps={{ maxLength: 250 }}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Add Description\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Seller</InputLabel>\r\n              <Select\r\n                id=\"best-seller\"\r\n                name=\"best-seller\"\r\n                value={bestSeller}\r\n                onChange={(e) => setBestSeller(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>New Arrival</InputLabel>\r\n              <Select\r\n                id=\"new-arrival\"\r\n                name=\"new-arrival\"\r\n                value={newArrival}\r\n                onChange={(e) => setNewArrival(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Deal</InputLabel>\r\n              <Select\r\n                id=\"best-deal\"\r\n                name=\"best-deal\"\r\n                value={bestDeal}\r\n                onChange={(e) => setBestDeal(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Discount</InputLabel>\r\n              <Select\r\n                id=\"discount\"\r\n                name=\"discount\"\r\n                value={discount}\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          {discount ? (\r\n            <Grid item xs={6} md={6}>\r\n              <Stack>\r\n                <InputLabel required>Discount Price</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onInput={(e) => {\r\n                    e.target.value = Math.max(0, parseFloat(e.target.value))\r\n                      .toString()\r\n                      .slice(0, 6);\r\n                  }}\r\n                  type=\"number\"\r\n                  value={discountPrice}\r\n                  onChange={(e) => setDiscountPrice(e.target.value)}\r\n                  placeholder=\"Enter product price\"\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Grid>\r\n        <br />\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose Thumbnail Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange}\r\n                  value={fileName}\r\n                  required\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose Multiple Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  multiple\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange1}\r\n                  value={fileName1}\r\n                  required\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName1}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Add Product\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","navigate","useNavigate","useState","file","setFile","fileName","setFileName","file1","setFile1","fileName1","setFileName1","React","name","setName","price","setPrice","quantity","setQuantity","active","setActive","rows","setRows","category","setCategory","description","setDescription","franchisePrice","setFranchisePrice","isLoading","setIsLoading","bestSeller","setBestSeller","newArrival","setNewArrival","bestDeal","setBestDeal","discount","setDiscount","discountPrice","setDiscountPrice","useEffect","myHeaders","Headers","append","process","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","adminId","redirect","fetch","then","response","json","result","data","catch","error","console","log","getAllCategory","title","action","onSubmit","event","preventDefault","formdata","FormData","Object","keys","key","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","container","spacing","gridSpacing","item","xs","md","required","fullWidth","id","inputProps","maxLength","value","onChange","e","target","placeholder","onInput","Math","max","parseInt","toString","slice","type","map","row","i","CategoryID","Name","parseFloat","className","accept","files","for","multiple","variant"],"sourceRoot":""}