{"version":3,"file":"static/js/7717.895de0ee.chunk.js","mappings":"0WA8FA,MAlFA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,EAAwBC,EAAAA,SAAe,IAAG,eAAnCC,EAAI,KAAEC,EAAO,KACpB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,GAAwCF,EAAAA,EAAAA,UAAS,MAAK,eAA/CG,EAAY,KAAEC,EAAe,KAC9BC,EAAa,IAAIC,EAAAA,EAII,aAgB1B,OAhB0B,oBAA3B,WAA4BC,GAAK,yEAER,OADvBL,GAAa,GACbK,EAAMC,iBAAiB,SACiBH,EAAWI,WAAW,CAC5DC,SAAUZ,EACVa,KAAMR,IACL,KAAD,EAH6B,KAAzBS,EAAyB,SAMa,OAAjB,OAAzBA,QAAyB,IAAzBA,GAA+B,QAAN,EAAzBA,EAA2BC,YAAI,WAAN,EAAzB,EAAiCC,MAAY,iBAE7CC,EAAAA,GAAAA,QAAc,uBACdpB,EAAS,YAAa,CAAEqB,SAAS,IAAQ,iDAElCD,EAAAA,GAAAA,MAAY,0BAAwB,6CAE9C,sBAQD,OA1BAlB,EAAAA,WAAgB,WAAO,GAAG,KA2BxB,SAACoB,EAAA,EAAQ,CAACC,MAAM,cAAa,UAC3B,kBAAMC,OAAO,IAAIC,SA5BS,SAEF,GAAD,gCA0BiB,WACtC,UAACC,EAAA,GAAI,CAACC,WAAS,EAACC,QAASC,EAAAA,GAAY,WACnC,SAACH,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAACC,EAAA,EAAK,YACJ,SAACC,EAAA,EAAU,CAACC,UAAQ,qBACpB,SAACC,EAAA,EAAS,CACRD,UAAQ,EACRE,WAAS,EACTC,GAAG,OACHnC,KAAK,OACLoC,KAAI,OACJC,MAAOhC,EACPiC,SAAU,SAACC,GAAC,OAAKjC,EAAgBiC,EAAEC,OAAOH,MAAM,EAChDI,YAAY,yBAIlB,SAAClB,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAACC,EAAA,EAAK,YACJ,SAACC,EAAA,EAAU,CAACC,UAAQ,yBACpB,SAACC,EAAA,EAAS,CACRD,UAAQ,EACRE,WAAS,EACTC,GAAG,WACHnC,KAAK,WACLqC,MAAOrC,EACPsC,SAAU,SAACC,GAAC,OAAKtC,EAAQsC,EAAEC,OAAOH,MAAM,EACxCI,YAAY,4BAKpB,mBACA,4BACGtC,GACC,SAACuC,EAAA,EAAO,CAACC,UAAU,UAEnB,SAACC,EAAA,EAAM,CAACC,QAAQ,YAAYT,KAAK,SAAQ,+BAQrD,C","sources":["views/utilities/HRM/holiday/add-holiday.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Button, Grid, Stack, TextField } from \"@mui/material\";\r\nimport formatDate from \"../../Date-Formet/date-formet\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport HolidayApi from \"../../../../api/holiday.api\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const holidayApi = new HolidayApi();\r\n\r\n  React.useEffect(() => {}, []);\r\n\r\n  async function handleSubmit(event) {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n    const addServiceRequestResponse = await holidayApi.addHoliday({\r\n      occasion: name,\r\n      date: selectedDate,\r\n    });\r\n    if (\r\n      addServiceRequestResponse &&\r\n      addServiceRequestResponse?.data?.code === 200\r\n    ) {\r\n      toast.success(`Added successsfully`);\r\n      navigate(\"/holidays\", { replace: true });\r\n    } else {\r\n      return toast.error(`Something went wrong!`);\r\n    }\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    {\r\n      formatDate(setSelectedDate(date));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Add Holiday\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Date</InputLabel>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"date\"\r\n                name=\"date\"\r\n                type={`date`}\r\n                value={selectedDate}\r\n                onChange={(e) => setSelectedDate(e.target.value)}\r\n                placeholder=\"Enter Occasion\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Occasion</InputLabel>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"occasion\"\r\n                name=\"occasion\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter Occasion\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <center>\r\n          {isLoading ? (\r\n            <Spinner animation=\"grow\" />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Add Holiday\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["navigate","useNavigate","React","name","setName","useState","isLoading","setIsLoading","selectedDate","setSelectedDate","holidayApi","HolidayApi","event","preventDefault","addHoliday","occasion","date","addServiceRequestResponse","data","code","toast","replace","MainCard","title","action","onSubmit","Grid","container","spacing","gridSpacing","item","xs","md","Stack","InputLabel","required","TextField","fullWidth","id","type","value","onChange","e","target","placeholder","Spinner","animation","Button","variant"],"sourceRoot":""}