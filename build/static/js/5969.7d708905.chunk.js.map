{"version":3,"file":"static/js/5969.7d708905.chunk.js","mappings":"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","sources":["views/utilities/product/add-product.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ProductApi from \"../../../api/product.api\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CategoryApi from \"../../../api/category.api\";//\r\nimport { updateAllCategory } from \"../../../redux/redux-slice/category.slice\";\r\nimport SubCategoryApi from \"../../../api/sub-category.api\";\r\nimport { updateAllSubCategory } from \"../../../redux/redux-slice/sub-category.slice\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const productApi = new ProductApi();\r\n  const [file, setFile] = useState([]);\r\n  const [fileName, setFileName] = useState([]);\r\n  const [file1, setFile1] = useState([]);\r\n  const [fileName1, setFileName1] = useState();\r\n  const [name, setName] = React.useState(\"\");\r\n  const [price, setPrice] = React.useState(\"\");\r\n  const [quantity, setQuantity] = React.useState(\"\");\r\n  const [active, setActive] = React.useState(true);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [franchisePrice, setFranchisePrice] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bestSeller, setBestSeller] = React.useState(false);\r\n  const [newArrival, setNewArrival] = React.useState(false);\r\n  const [bestDeal, setBestDeal] = React.useState(false);\r\n  const [discount, setDiscount] = React.useState(false);\r\n  const [discountPrice, setDiscountPrice] = React.useState(0);\r\n  const [features, setFeatures] = useState();\r\n  const [mainVarient, setMainVerient] = React.useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0]);\r\n    setFileName(event.target.value);\r\n  }\r\n  function handleChange1(event) {\r\n    setFile1(event.target.files);\r\n    setFileName1(event.target.value);\r\n  }\r\n\r\n  const handleChangeDescription = (content, delta, source, editor) => {\r\n    setDescription(content);\r\n  };\r\n\r\n  const handleChangeFeatures = (content, delta, source, editor) => {\r\n    setFeatures(content);\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    setIsLoading(true);\r\n    event.preventDefault();\r\n    var formdata = new FormData();\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"description\",description);\r\n    formdata.append(\"feature\",features);\r\n    formdata.append(\"price\", price);\r\n    formdata.append(\"categoryId\", category);\r\n    formdata.append(\"subCategoryId\", mainVarient);\r\n    formdata.append(\"quantity\", quantity);\r\n    formdata.append(\"active\", active);\r\n    // Append each item in the variant array to the FormData object\r\n    tags.forEach((item, index) => {\r\n      formdata.append(`variant[${index}]`, item);\r\n    });\r\n    // formdata.append(\"variant\", variant);\r\n    formdata.append(\"img\", file);\r\n    for (const key of Object.keys(file1)) {\r\n      formdata.append(`images`, file1[key]);\r\n    }\r\n    formdata.append(\"frenchisePrice\", franchisePrice);\r\n    formdata.append(\"discount\", discount);\r\n    formdata.append(\"discountPrice\", discountPrice);\r\n    formdata.append(\"isNew\", newArrival);\r\n    formdata.append(\"isBestSeller\", bestSeller);\r\n    formdata.append(\"isBestDeal\", bestDeal);\r\n    const addBannerResponse = await productApi.addProduct(formdata);\r\n    if (addBannerResponse && addBannerResponse?.data?.code === 200) {\r\n      toast.success(`Added successsfully`);\r\n      navigate(\"/product\", { replace: true });\r\n    } else {\r\n      return toast.error(`Something went wrong!`);\r\n    }\r\n  }\r\n\r\n  const categoryApi = new CategoryApi();\r\n  const rows = useSelector((state) => state.category.Category);\r\n\r\n  const getAllCategory = useCallback(async () => {\r\n    try {\r\n      const categories = await categoryApi.getAllCategory();\r\n      if (!categories || !categories.data.data) {\r\n        return toast.error(\"no available\");\r\n      } else {\r\n        dispatch(updateAllCategory(categories.data.data));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n  const subCategoryApi = new SubCategoryApi();\r\n  const rowses = useSelector((state) => state.subCategory.SubCategory);\r\n\r\n    async function handleSetSubCategory(event) {\r\n      event.preventDefault();\r\n      const subCategories = await subCategoryApi.getSubCategoryByCategoryId({\r\n        categoryId: category,\r\n      });\r\n      if (subCategories && subCategories?.data?.code === 200) {\r\n        return dispatch(updateAllSubCategory(subCategories.data.data));\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n  const [tags, setTags] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if ((event.key === \"Enter\" && input)|| event.key === \" \") {\r\n      setTags([...tags, input.trim()]);\r\n      setInput(\"\");\r\n    }\r\n\r\n  };\r\n\r\n  const handleTagClick = (index) => {\r\n    setTags(tags.filter((tag, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Add Product\">\r\n      <form>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"product\"\r\n                inputProps={{ maxLength: 30 }}\r\n                name=\"product\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Enter product name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Franchise Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={franchisePrice}\r\n                onChange={(e) => setFranchisePrice(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Quantity</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 3);\r\n                }}\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                placeholder=\"Enter quantity\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Variant</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n                onKeyDown={handleInputKeyDown}\r\n              />\r\n              <br />\r\n              <div>\r\n                {tags.map((tag, index) => (\r\n                  <span>\r\n                    <span\r\n                      key={index}\r\n                      onClick={() => handleTagClick(index)}\r\n                      style={{ border: \"1px solid\", borderRadius: \"5px\" }}\r\n                    >\r\n                      &nbsp; {tag} <span style={{ color: \"red\" }}>x</span>{\" \"}\r\n                      &nbsp;\r\n                    </span>\r\n                    &nbsp; &nbsp;\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose Category</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                onBlur={handleSetSubCategory}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.CategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Sub Category</InputLabel>\r\n              <Select\r\n                id=\"mainVarient\"\r\n                name=\"mainVarient\"\r\n                value={mainVarient}\r\n                onChange={(e) => setMainVerient(e.target.value)}\r\n                renderValue={\r\n                  category !== \"\" ? undefined : () => \"--Select SubCategory--\"\r\n                }\r\n              >\r\n                {rowses.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.SubCategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack>\r\n              <InputLabel required>Description</InputLabel>\r\n              <ReactQuill\r\n                className=\"quill-editor\"\r\n                size={`md`}\r\n                theme=\"snow\"\r\n                value={description}\r\n                onChange={handleChangeDescription}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack>\r\n              <InputLabel required>Features</InputLabel>\r\n              <ReactQuill\r\n                className=\"quill-editor\"\r\n                size={`md`}\r\n                theme=\"snow\"\r\n                value={features}\r\n                onChange={handleChangeFeatures}\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Seller</InputLabel>\r\n              <Select\r\n                id=\"best-seller\"\r\n                name=\"best-seller\"\r\n                value={bestSeller}\r\n                onChange={(e) => setBestSeller(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>New Arrival</InputLabel>\r\n              <Select\r\n                id=\"new-arrival\"\r\n                name=\"new-arrival\"\r\n                value={newArrival}\r\n                onChange={(e) => setNewArrival(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={4} md={4}>\r\n            <Stack>\r\n              <InputLabel required>Best Deal</InputLabel>\r\n              <Select\r\n                id=\"best-deal\"\r\n                name=\"best-deal\"\r\n                value={bestDeal}\r\n                onChange={(e) => setBestDeal(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Discount</InputLabel>\r\n              <Select\r\n                id=\"discount\"\r\n                name=\"discount\"\r\n                value={discount}\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          {discount ? (\r\n            <Grid item xs={6} md={6}>\r\n              <Stack>\r\n                <InputLabel required>Discount Percent</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onInput={(e) => {\r\n                    e.target.value = Math.max(0, parseFloat(e.target.value))\r\n                      .toString()\r\n                      .slice(0, 2);\r\n                  }}\r\n                  type=\"number\"\r\n                  value={discountPrice}\r\n                  onChange={(e) => setDiscountPrice(e.target.value)}\r\n                  placeholder=\"Enter product price\"\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Grid>\r\n        <br />\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose Thumbnail Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange}\r\n                  value={fileName}\r\n                  required\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose Multiple Image</InputLabel>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  multiple\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange1}\r\n                  value={fileName1}\r\n                  required\r\n                />\r\n                <label className=\"custom-file-label\" for=\"thumbnail\">\r\n                  {fileName1}\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" onClick={handleSubmit}>\r\n              Add Product\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","productApi","ProductApi","useState","file","setFile","fileName","setFileName","file1","setFile1","fileName1","setFileName1","React","name","setName","price","setPrice","quantity","setQuantity","active","setActive","category","setCategory","description","setDescription","franchisePrice","setFranchisePrice","isLoading","setIsLoading","bestSeller","setBestSeller","newArrival","setNewArrival","bestDeal","setBestDeal","discount","setDiscount","discountPrice","setDiscountPrice","features","setFeatures","mainVarient","setMainVerient","event","preventDefault","formdata","FormData","append","tags","forEach","item","index","Object","keys","key","addProduct","addBannerResponse","data","code","toast","replace","categoryApi","CategoryApi","rows","useSelector","state","Category","getAllCategory","useCallback","categories","updateAllCategory","console","error","useEffect","subCategoryApi","SubCategoryApi","rowses","subCategory","SubCategory","getSubCategoryByCategoryId","categoryId","subCategories","updateAllSubCategory","setTags","input","setInput","title","container","spacing","gridSpacing","xs","md","required","fullWidth","id","inputProps","maxLength","value","onChange","e","target","placeholder","onInput","Math","max","parseInt","toString","slice","type","onKeyDown","trim","map","tag","onClick","filter","i","handleTagClick","style","border","borderRadius","color","onBlur","row","CategoryID","Name","renderValue","undefined","SubCategoryID","className","size","theme","content","delta","source","editor","parseFloat","accept","files","for","multiple","variant"],"sourceRoot":""}