{"version":3,"file":"static/js/665.b38de9f7.chunk.js","mappings":"0MAMMA,GAAcC,EAAAA,EAAAA,KAAO,SAACC,GAAK,OAAK,SAAC,KAAa,UAAKA,GAAS,GAAE,CAChEC,kBAAmB,SAACC,GAAI,MAAc,eAATA,CAAqB,GADlCH,EAEjB,gBAAGI,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAU,MAAQ,CAC3BC,MAAOF,EAAMG,QAAQC,KAAKC,QAC1BC,WAAY,IACZC,aAAcN,EAAa,EAAI,EAClC,IAEKO,EAAa,SAAH,OAAMC,EAAQ,EAARA,SAAUR,EAAU,EAAVA,WAAeS,GAAM,mBACjD,SAACf,GAAW,gBAACM,WAAYA,GAAgBS,GAAM,aAC1CD,IACS,EAQlBD,EAAWG,aAAe,CACtBV,YAAY,GAGhB,K,kLCmIA,UAtJA,WACE,IAAMW,GAASC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KACtB,GAA4BJ,EAAAA,EAAAA,UAAS,IAAG,eAAjCK,EAAM,KAAEC,EAAS,KACxB,GAAwBN,EAAAA,EAAAA,UAAS,IAAG,eAA7BO,EAAI,KAAEC,EAAO,KACpB,GAAgCR,EAAAA,EAAAA,UAAS,IAAG,eAArCS,EAAQ,KAAEC,EAAW,KAC5B,GAAwBV,EAAAA,EAAAA,UAAS,IAAG,eAA7BW,EAAI,KAAEC,EAAO,KAEhBC,EAAY,IAAIC,QAqCpB,OApCAD,EAAUE,OAAO,UAAWC,gDAC5BH,EAAUE,OAAO,gBAAiB,UAAYE,aAAaC,QAAQ,UACnEL,EAAUE,OAAO,eAAgB,qBA8BjCI,EAAAA,EAAAA,YAAU,YA5BV,WACE,IAAIC,EAAMC,KAAKC,UAAU,CACvBC,QAASN,aAAaC,QAAQ,UAC9BM,QAAS1B,EAAO2B,KAEdC,EAAiB,CACnBC,OAAQ,OACRC,QAASf,EACTgB,KAAMT,EACNU,SAAU,UAGZC,MAAM,GAAD,OACAf,+CAA6B,yBAChCU,GAECM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACLjC,EAAQiC,EAAOC,KAAKC,UACpBjC,EAAS+B,EAAOC,KAAKE,OACrBhC,EAAU6B,EAAOC,KAAKG,SACtB/B,EAAQ2B,EAAOC,KAAKI,MACpB9B,EAAYyB,EAAOC,KAAKK,OAAOC,MAC/B9B,EAAQuB,EAAOC,KAAKK,OAAOE,aAC/B,IACGC,OAAM,SAACC,GAAW,GACvB,CAGEC,EACF,GAAG,KAGD,UAAC,IAAQ,CAACC,MAAM,wBAAuB,WACrC,UAAC,KAAI,CAACC,WAAS,EAACC,QAASC,EAAAA,GAAY,WACnC,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,qBACpB,SAAC,IAAS,CAAC7B,GAAG,OAAOxB,KAAK,OAAOsD,MAAOtD,EAAMuD,UAAQ,UAG1D,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,sBACpB,SAAC,IAAS,CAAC7B,GAAG,OAAOxB,KAAK,OAAOsD,MAAOpD,EAAOqD,UAAQ,UAG3D,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,wBACpB,SAAC,IAAS,CACR7B,GAAG,OACHxB,KAAK,OACLM,KAAK,SACLgD,MAAOlD,EACPmD,UAAQ,UAId,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,qBACpB,SAAC,IAAS,CAAC7B,GAAG,OAAOxB,KAAK,OAAOsD,MAAOhD,EAAMiD,UAAQ,UAG1D,SAAC,KAAI,CAACL,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,0BACpB,SAAC,IAAS,CAAC7B,GAAG,OAAOxB,KAAK,OAAOsD,MAAO9C,EAAU+C,UAAQ,aAIhE,mBACA,SAAC,IAAS,UACP7C,EAAK8C,KAAI,SAACC,EAAKC,GACd,OACE,UAAC,IAAQ,CAACC,OAAK,EAACC,KAAK,WAAU,WAC7B,SAAC,IAAS,CAACC,MAAM,QAAO,SACrBJ,EAAIK,QADuBJ,IAG9B,SAAC,IAAS,CAACG,MAAM,QAAO,UACtB,gBAAKE,UAAU,WAAU,UACvB,mBAAOC,QAAQ,WAAU,WACvB,+CACA,kBAAO1D,KAAK,WAAWkB,GAAG,WAAWyC,QAASR,EAAIS,UAClD,2BACE,+BAKR,SAAC,IAAS,CAACL,MAAM,QAAO,UACtB,gBAAKE,UAAU,WAAU,UACvB,mBAAOC,QAAQ,WAAU,WACvB,6CACA,kBAAO1D,KAAK,WAAWkB,GAAG,WAAWyC,QAASR,EAAIU,QAClD,2BACE,+BAKR,SAAC,IAAS,CAACN,MAAM,QAAO,UACtB,gBAAKE,UAAU,WAAU,UACvB,mBAAOC,QAAQ,WAAU,WACvB,+CACA,kBAAO1D,KAAK,WAAWkB,GAAG,WAAWyC,QAASR,EAAIW,UAClD,2BACE,+BAKR,SAAC,IAAS,CAACP,MAAM,QAAO,UACtB,gBAAKE,UAAU,WAAU,UACvB,mBAAOC,QAAQ,WAAU,WACvB,2BACE,wBAEF,+CACA,kBAAO1D,KAAK,WAAWkB,GAAG,WAAWyC,QAASR,EAAIY,UAClD,2BACE,gCAOd,OAEF,oBAGN,C","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/Staff Management/view-staff.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { Grid, Stack, TextField } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gridSpacing } from \"store/constant\";\r\n\r\nfunction App() {\r\n  const params = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [roleName, setRoleName] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getAllStaffPermission() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      staffId: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `${process.env.REACT_APP_API_URL}getAllStaffPermission`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setName(result.data.UserName);\r\n        setEmail(result.data.Email);\r\n        setNumber(result.data.Contact);\r\n        setType(result.data.Type);\r\n        setRoleName(result.data.RoleID.Name);\r\n        setRows(result.data.RoleID.IsPermission);\r\n    })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllStaffPermission();\r\n  }, []);\r\n\r\n  return (\r\n    <MainCard title=\"View Staff Permission\">\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={6} md={6}>\r\n          <Stack>\r\n            <InputLabel required>Name</InputLabel>\r\n            <TextField id=\"name\" name=\"name\" value={name} disabled></TextField>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={6} md={6}>\r\n          <Stack>\r\n            <InputLabel required>Email</InputLabel>\r\n            <TextField id=\"name\" name=\"name\" value={email} disabled></TextField>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={4} md={4}>\r\n          <Stack>\r\n            <InputLabel required>Contact</InputLabel>\r\n            <TextField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"number\"\r\n              value={number}\r\n              disabled\r\n            ></TextField>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={4} md={4}>\r\n          <Stack>\r\n            <InputLabel required>Type</InputLabel>\r\n            <TextField id=\"name\" name=\"name\" value={type} disabled></TextField>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={4} md={4}>\r\n          <Stack>\r\n            <InputLabel required>Role Name</InputLabel>\r\n            <TextField id=\"name\" name=\"name\" value={roleName} disabled></TextField>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n      <hr />\r\n      <TableBody>\r\n        {rows.map((row, i) => {\r\n          return (\r\n            <TableRow hover role=\"checkbox\">\r\n              <TableCell align=\"start\" key={i}>\r\n                {row.Module}\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-1\">\r\n                    <small>Create&nbsp;&nbsp;</small>\r\n                    <input type=\"checkbox\" id=\"toggle-1\" checked={row.Create} />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-7\">\r\n                    <small>Read&nbsp;&nbsp;</small>\r\n                    <input type=\"checkbox\" id=\"toggle-7\" checked={row.Read} />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-8\">\r\n                    <small>Update&nbsp;&nbsp;</small>\r\n                    <input type=\"checkbox\" id=\"toggle-8\" checked={row.Update} />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-9\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Delete&nbsp;&nbsp;</small>\r\n                    <input type=\"checkbox\" id=\"toggle-9\" checked={row.Delete} />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </TableBody>\r\n      <br />\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","params","useParams","useState","name","setName","email","setEmail","number","setNumber","type","setType","roleName","setRoleName","rows","setRows","myHeaders","Headers","append","process","localStorage","getItem","useEffect","raw","JSON","stringify","adminId","staffId","id","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","UserName","Email","Contact","Type","RoleID","Name","IsPermission","catch","error","getAllStaffPermission","title","container","spacing","gridSpacing","item","xs","md","required","value","disabled","map","row","i","hover","role","align","Module","className","htmlFor","checked","Create","Read","Update","Delete"],"sourceRoot":""}