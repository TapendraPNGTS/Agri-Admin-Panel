{"version":3,"file":"static/js/5058.c126a4f6.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/Staff Management/Permission.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    horizontal: PropTypes.bool\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import React, { useState } from \"react\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport {\r\n  Stack,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport \"../Toggle-Switch/ToggleSwitch.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Permission = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Manage State\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [readManage, setReadManage] = useState(false);\r\n  const [updateManage, setUpdateManage] = useState(false);\r\n  const [deleteManage, setDeleteManage] = useState(false);\r\n  // Course State\r\n  const [roleCreate, setRoleCreate] = useState(false);\r\n  const [courseRead, setCourseRead] = useState(false);\r\n  const [courseUpdate, setCourseUpdate] = useState(false);\r\n  const [courseDelete, setCourseDelete] = useState(false);\r\n\r\n  //Free Course State\r\n  const [userCreate, setUserCreate] = useState(false);\r\n  const [freecourseRead, setFreeCourseRead] = useState(false);\r\n  const [freecourseUpdate, setFreeCourseUpdate] = useState(false);\r\n  const [freecourseDelete, setFreeCourseDelete] = useState(false);\r\n\r\n  //Report State\r\n  const [leadCreate, setLeadCreate] = useState(false);\r\n  const [reportRead, setReportRead] = useState(false);\r\n  const [reportUpdate, setReportUpdate] = useState(false);\r\n  const [reportDelete, setReportDelete] = useState(false);\r\n\r\n  const [role, setRole] = useState();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getAllRole() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllRole`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setRows(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n  useEffect(() => {\r\n    getAllRole();\r\n  }, []);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      roleId: role,\r\n      permission: [\r\n        {\r\n          Module: \"Management\",\r\n          Create: isChecked,\r\n          Read: readManage,\r\n          Update: updateManage,\r\n          Delete: deleteManage,\r\n        },\r\n        {\r\n          Module: \"Course\",\r\n          Create: roleCreate,\r\n          Read: courseRead,\r\n          Update: courseUpdate,\r\n          Delete: courseDelete,\r\n        },\r\n        {\r\n          Module: \"Free Course\",\r\n          Create: userCreate,\r\n          Read: freecourseRead,\r\n          Update: freecourseUpdate,\r\n          Delete: freecourseDelete,\r\n        },\r\n        {\r\n          Module: \"Report\",\r\n          Create: leadCreate,\r\n          Read: reportRead,\r\n          Update: reportUpdate,\r\n          Delete: reportDelete,\r\n        },\r\n      ],\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}addPermission`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MainCard>\r\n        {\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">Manage Permission</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        <form onSubmit={handleSubmit} action=\"#\">\r\n        <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Select Role to Get and Set Permissions</InputLabel>\r\n              <Select\r\n                id=\"role\"\r\n                name=\"role\"\r\n                defaultValue=\"Sales Manager\"\r\n                onChange={(e) => setRole(e.target.value)}\r\n              >\r\n                {rows.map((row, index) => (\r\n                  <MenuItem value={row.RoleID} key={index}>\r\n                    {row.Name}\r\n                  </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <hr />\r\n          <TableBody>\r\n            <TableRow hover role=\"checkbox\">\r\n              <TableCell align=\"start\">Management</TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-1\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Create&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-1\"\r\n                      checked={isChecked}\r\n                      onChange={(e) => {\r\n                        setIsChecked(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-7\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Read&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-7\"\r\n                      checked={readManage}\r\n                      onChange={(e) => {\r\n                        setReadManage(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-8\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Update&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-8\"\r\n                      checked={updateManage}\r\n                      onChange={(e) => {\r\n                        setUpdateManage(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-9\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Delete&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-9\"\r\n                      checked={deleteManage}\r\n                      onChange={(e) => {\r\n                        setDeleteManage(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow hover role=\"checkbox\">\r\n              <TableCell align=\"start\">Course</TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-2\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Create&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-2\"\r\n                      checked={roleCreate}\r\n                      onChange={(e) => {\r\n                        setRoleCreate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-10\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Read&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-10\"\r\n                      checked={courseRead}\r\n                      onChange={(e) => {\r\n                        setCourseRead(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-11\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Update&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-11\"\r\n                      checked={courseUpdate}\r\n                      onChange={(e) => {\r\n                        setCourseUpdate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-12\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Delete&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-12\"\r\n                      checked={courseDelete}\r\n                      onChange={(e) => {\r\n                        setCourseDelete(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow hover role=\"checkbox\">\r\n              <TableCell align=\"start\">Free Course</TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-3\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Create&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-3\"\r\n                      checked={userCreate}\r\n                      onChange={(e) => {\r\n                        setUserCreate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-13\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Read&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-13\"\r\n                      checked={freecourseRead}\r\n                      onChange={(e) => {\r\n                        setFreeCourseRead(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-14\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Update&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-14\"\r\n                      checked={freecourseUpdate}\r\n                      onChange={(e) => {\r\n                        setFreeCourseUpdate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-15\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Delete&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-15\"\r\n                      checked={freecourseDelete}\r\n                      onChange={(e) => {\r\n                        setFreeCourseDelete(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow hover role=\"checkbox\">\r\n              <TableCell align=\"start\">Report</TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-4\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Create&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-4\"\r\n                      checked={leadCreate}\r\n                      onChange={(e) => {\r\n                        setLeadCreate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-16\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Read&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-16\"\r\n                      checked={reportRead}\r\n                      onChange={(e) => {\r\n                        setReportRead(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-17\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Update&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-17\"\r\n                      checked={reportUpdate}\r\n                      onChange={(e) => {\r\n                        setReportUpdate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"start\">\r\n                <div className=\"switcher\">\r\n                  <label htmlFor=\"toggle-18\">\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                    <small>Delete&nbsp;&nbsp;</small>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"toggle-18\"\r\n                      checked={reportDelete}\r\n                      onChange={(e) => {\r\n                        setReportDelete(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      <small></small>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Add Permission\r\n          </Button>\r\n        </form>\r\n      </MainCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Permission;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","useNavigate","useState","isChecked","setIsChecked","readManage","setReadManage","updateManage","setUpdateManage","deleteManage","setDeleteManage","roleCreate","setRoleCreate","courseRead","setCourseRead","courseUpdate","setCourseUpdate","courseDelete","setCourseDelete","userCreate","setUserCreate","freecourseRead","setFreeCourseRead","freecourseUpdate","setFreeCourseUpdate","freecourseDelete","setFreeCourseDelete","leadCreate","setLeadCreate","reportRead","setReportRead","reportUpdate","setReportUpdate","reportDelete","setReportDelete","role","setRole","rows","setRows","myHeaders","Headers","append","process","localStorage","getItem","useEffect","raw","JSON","stringify","adminId","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","catch","error","console","log","getAllRole","MainCard","Grid","container","alignItems","justifyContent","spacing","gridSpacing","item","Typography","variant","onSubmit","event","preventDefault","roleId","permission","Module","Create","Read","Update","Delete","code","action","xs","md","Stack","required","Select","id","name","defaultValue","onChange","e","target","value","map","row","index","MenuItem","RoleID","Name","TableBody","TableRow","hover","TableCell","align","className","htmlFor","type","checked","Button"],"sourceRoot":""}