{"version":3,"file":"static/js/5382.05e26089.chunk.js","mappings":"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","sources":["api/index.api.js","api/state.api.js","conffigs/endpoints.config.js","views/utilities/manage-area/state/state.js"],"sourcesContent":["import axios from \"axios\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nexport class HttpClient {\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = async ({ response, config }) => {\r\n    const originalRequest = config;\r\n    if (response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      return this.instance(originalRequest);\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n  };\r\n}\r\n\r\nexport default HttpClient;\r\n","import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../conffigs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass State extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"Authkey\"] = process.env.REACT_APP_AUTH_KEY;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllStateConfig = ApiRoutes.State.AllState;\r\n  StateByIdConfig = ApiRoutes.State.StateById;\r\n  AddStateConfig = ApiRoutes.State.AddState;\r\n  EditStateConfig = ApiRoutes.State.EditState;\r\n  DeleteStateConfig = ApiRoutes.State.DeleteState;\r\n\r\n  getAllState = async (data) => {\r\n    return this.instance({\r\n      method: this.AllStateConfig.Method,\r\n      url: this.AllStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getStateById = async (data) => {\r\n    return this.instance({\r\n      method: this.StateByIdConfig.Method,\r\n      url: this.StateByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addState = async (data) => {\r\n    return this.instance({\r\n      method: this.AddStateConfig.Method,\r\n      url: this.AddStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  editState = async (data) => {\r\n    return this.instance({\r\n      method: this.EditStateConfig.Method,\r\n      url: this.EditStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  deleteState = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteStateConfig.Method,\r\n      url: this.DeleteStateConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default State;\r\n","export const HttpMethod = {\r\n  Get: \"GET\",\r\n  Post: \"POST\",\r\n  Put: \"PUT\",\r\n  Patch: \"PATCH\",\r\n  Delete: \"DELETE\",\r\n};\r\n\r\nconst ApiRoutes = {\r\n  Dashboard: {\r\n    Data: {\r\n      Endpoint: \"/dashboard\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Auth: {\r\n    Login: {\r\n      Endpoint: \"/login\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  User: {\r\n    All: {\r\n      Endpoint: \"/getAllUser\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    UserById: {\r\n      Endpoint: \"/getUserById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  CheckOut: {\r\n    Data: {\r\n      Endpoint: \"/addAllCart\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Cod: {\r\n    Cod: {\r\n      Endpoint: \"/frenchiseProductCOD\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PhonePay: {\r\n      Endpoint: \"/payment\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Banner: {\r\n    All: {\r\n      Endpoint: \"/getAllBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    BannerById: {\r\n      Endpoint: \"/getBannerById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddBanner: {\r\n      Endpoint: \"/addBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditBanner: {\r\n      Endpoint: \"/updateBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteBanner: {\r\n      Endpoint: \"/deleteBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Category: {\r\n    All: {\r\n      Endpoint: \"/getAllCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CategoryById: {\r\n      Endpoint: \"/getCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCategory: {\r\n      Endpoint: \"/addCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCategory: {\r\n      Endpoint: \"/updateCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Attendence: {\r\n    All: {\r\n      Endpoint: \"/getAllAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AttendenceById: {\r\n      Endpoint: \"/getAttendenceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddAttendence: {\r\n      Endpoint: \"/addAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditAttendence: {\r\n      Endpoint: \"/updateAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteAttendence: {\r\n      Endpoint: \"/deleteAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Holiday: {\r\n    All: {\r\n      Endpoint: \"/getAllHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    HolidayById: {\r\n      Endpoint: \"/getHolidayById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddHoliday: {\r\n      Endpoint: \"/addHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditHoliday: {\r\n      Endpoint: \"/updateHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteHoliday: {\r\n      Endpoint: \"/deleteHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Service: {\r\n    All: {\r\n      Endpoint: \"/getAllService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ServiceById: {\r\n      Endpoint: \"/getServiceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddService: {\r\n      Endpoint: \"/addService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditService: {\r\n      Endpoint: \"/updateService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteService: {\r\n      Endpoint: \"/deleteService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  SubCategory: {\r\n    All: {\r\n      Endpoint: \"/getAllSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    SubCategoryById: {\r\n      Endpoint: \"/getSubCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    subCategoryByCategoryIdConfig: {\r\n      Endpoint: \"/getSubCategoryByCategoryId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddSubCategory: {\r\n      Endpoint: \"/addSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditSubCategory: {\r\n      Endpoint: \"/updateSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteSubCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Product: {\r\n    All: {\r\n      Endpoint: \"/getAllProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllProductFrencise: {\r\n      Endpoint: \"/getFranchiseProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ProductById: {\r\n      Endpoint: \"/getProductById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddProduct: {\r\n      Endpoint: \"/addProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    addProductVarients: {\r\n      Endpoint: \"/addProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProduct: {\r\n      Endpoint: \"/updateProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProductVariant: {\r\n      Endpoint: \"/updateProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteProduct: {\r\n      Endpoint: \"/deleteProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Frencise: {\r\n    All: {\r\n      Endpoint: \"/getAllFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseAccept: {\r\n      Endpoint: \"/getAllFrencisePending\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseById: {\r\n      Endpoint: \"/getFrenciseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseCheck: {\r\n      Endpoint: \"/frenciseCheck\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFrencise: {\r\n      Endpoint: \"/addFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFrencise: {\r\n      Endpoint: \"/editFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFrencise: {\r\n      Endpoint: \"/deleteFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Role: {\r\n    All: {\r\n      Endpoint: \"/getAllRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    RoleById: {\r\n      Endpoint: \"/getRoleById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddRole: {\r\n      Endpoint: \"/addRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditRole: {\r\n      Endpoint: \"/updateRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteRole: {\r\n      Endpoint: \"/deleteRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Staff: {\r\n    All: {\r\n      Endpoint: \"/getAllStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StaffById: {\r\n      Endpoint: \"/getStaffById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddStaff: {\r\n      Endpoint: \"/addStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditStaff: {\r\n      Endpoint: \"/updateStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteStaff: {\r\n      Endpoint: \"/deleteStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Farmer: {\r\n    All: {\r\n      Endpoint: \"/getAllServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FarmerById: {\r\n      Endpoint: \"/getServiceRequestById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFarmer: {\r\n      Endpoint: \"/addServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFarmer: {\r\n      Endpoint: \"/updateFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFarmer: {\r\n      Endpoint: \"/deleteFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  District: {\r\n    AllDistrict: {\r\n      Endpoint: \"/getAllDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictById: {\r\n      Endpoint: \"/getDistrictById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictByStateId: {\r\n      Endpoint: \"/getCityByStateId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddDistrict: {\r\n      Endpoint: \"/addDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditDistrict: {\r\n      Endpoint: \"/updateDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteDistrict: {\r\n      Endpoint: \"/deleteDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  State: {\r\n    AllState: {\r\n      Endpoint: \"/getAllState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StateById: {\r\n      Endpoint: \"/getStateById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddState: {\r\n      Endpoint: \"/addState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditState: {\r\n      Endpoint: \"/updateState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteState: {\r\n      Endpoint: \"/deleteState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  ZipCode: {\r\n    AllZipCode: {\r\n      Endpoint: \"/getAllZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ZipCodeById: {\r\n      Endpoint: \"/getZipById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddZipCode: {\r\n      Endpoint: \"/addZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditZipCode: {\r\n      Endpoint: \"/editZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteZipCode: {\r\n      Endpoint: \"/deleteZip\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseState: {\r\n    AllFranchiseState: {\r\n      Endpoint: \"/getAllStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseStateById: {\r\n      Endpoint: \"/getStateFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseState: {\r\n      Endpoint: \"/addStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseState: {\r\n      Endpoint: \"/editStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseState: {\r\n      Endpoint: \"/deleteStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseDistrict: {\r\n    AllFranchiseDistrict: {\r\n      Endpoint: \"/getAllDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseDistrictById: {\r\n      Endpoint: \"/getDistrictFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseDistrict: {\r\n      Endpoint: \"/addDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseDistrict: {\r\n      Endpoint: \"/editDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseDistrict: {\r\n      Endpoint: \"/deleteDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseBlock: {\r\n    AllFranchiseBlock: {\r\n      Endpoint: \"/getAllBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseBlockById: {\r\n      Endpoint: \"/getBlockFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseBlock: {\r\n      Endpoint: \"/addBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseBlock: {\r\n      Endpoint: \"/editBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseBlock: {\r\n      Endpoint: \"/deleteBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseCluster: {\r\n    AllFranchiseCluster: {\r\n      Endpoint: \"/getAllClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseClusterById: {\r\n      Endpoint: \"/getClusterFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseCluster: {\r\n      Endpoint: \"/addClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseCluster: {\r\n      Endpoint: \"/editClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseCluster: {\r\n      Endpoint: \"/deleteClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseVillage: {\r\n    AllFranchiseVillage: {\r\n      Endpoint: \"/getAllVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseVillageById: {\r\n      Endpoint: \"/getVillageFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseVillage: {\r\n      Endpoint: \"/addVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseVillage: {\r\n      Endpoint: \"/editVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseVillage: {\r\n      Endpoint: \"/deleteVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Commissiom: {\r\n    All: {\r\n      Endpoint: \"/getAllCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CommissiomById: {\r\n      Endpoint: \"/getCommissionById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCommissiom: {\r\n      Endpoint: \"/addCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCommissiom: {\r\n      Endpoint: \"/updateCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCommissiom: {\r\n      Endpoint: \"/deleteCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n};\r\n\r\nexport default ApiRoutes;\r\n","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Card from \"@mui/material/Card\";\r\nimport swal from \"sweetalert\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { IconButton, Stack, Tooltip, Typography , CircularProgress } from \"@mui/material\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StateApi from \"../../../../api/state.api\";\r\nimport { updateAllState } from \"../../../../redux/redux-slice/state.slice\";\r\n\r\nexport default function DataTable() {\r\n  const navigate = useNavigate();\r\n  const [page, setPage] = React.useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const dispatch = useDispatch();\r\n  const stateApi = new StateApi();\r\n  const rows = useSelector((state) => state.state.State);\r\n\r\n  const getAllState = useCallback(async () => {\r\n    try {\r\n      const state = await stateApi.getAllState({});\r\n      if (!state || !state.data.data) {\r\n        return toast.error(\"no latest state available\");\r\n      } else {\r\n        dispatch(updateAllState(state.data.data));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllState();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [rows]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const handleDelete = async (stateId) => {\r\n  //   try {\r\n  //     const deleteStateResponse = await stateApi.deleteState({ stateId });\r\n  //     if (deleteStateResponse && deleteStateResponse?.data?.code === 200) {\r\n  //       getAllState();\r\n  //       return toast.success(\"Deleted Successfully\");\r\n  //     } else {\r\n  //       return toast.error(deleteStateResponse.data?.message);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     toast.error(\"Something went wrong\");\r\n  //     throw error;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n      <MainCard\r\n        title={\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">State</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={(e) => {\r\n                  navigate(\"/add-state\");\r\n                }}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add State\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        content={false}\r\n      >\r\n        {rows ? (\r\n          <Card>\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              spacing={gridSpacing}\r\n            >\r\n              <Grid item></Grid>\r\n            </Grid>\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n              <TableContainer sx={{ maxHeight: 540 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\" id=\"my-table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ pl: 3 }}>S. No.</TableCell>\r\n                      <TableCell>State</TableCell>\r\n                      {/* <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                        Actions\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows\r\n                      .filter((row) =>\r\n                        search === \"\"\r\n                          ? row\r\n                          : row.Title.toLowerCase().includes(\r\n                              search.toLowerCase()\r\n                            )\r\n                      )\r\n\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, index) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            role=\"checkbox\"\r\n                            tabIndex={-1}\r\n                            key={row.code}\r\n                          >\r\n                            <TableCell sx={{ pl: 3 }} align=\"start\">\r\n                              {index + 1}\r\n                            </TableCell>\r\n                            <TableCell sx={{ pl: 3 }} align=\"start\">\r\n                              {row.Name}\r\n                            </TableCell>\r\n                            {/* <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                              <Stack\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                              >\r\n                                <Tooltip\r\n                                  placement=\"top\"\r\n                                  title=\"Edit\"\r\n                                  onClick={(e) => {\r\n                                    navigate(`/edit-state/${row.stateID}`);\r\n                                  }}\r\n                                  data-target={`#`}\r\n                                >\r\n                                  <IconButton\r\n                                    color=\"primary\"\r\n                                    aria-label=\"edit\"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <EditIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n\r\n                                <Tooltip\r\n                                  placement=\"top\"\r\n                                  title=\"delete\"\r\n                                  onClick={DeleteCategory(`${row.StateID}`)}\r\n                                >\r\n                                  <IconButton\r\n                                    color=\"primary\"\r\n                                    aria-label=\"edit\"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <DeleteIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </Stack>\r\n                            </TableCell> */}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </Card>\r\n        ) : (\r\n          <>\r\n            <br></br>\r\n            <center>\r\n              <CircularProgress />\r\n            </center>\r\n          </>\r\n        )}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n"],"names":["HttpClient","baseURL","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","config","originalRequest","status","_retry","Promise","resolve","this","axios","State","process","_initializeRequestInterceptor","request","headers","getTokenLocal","AllStateConfig","ApiRoutes","StateByIdConfig","AddStateConfig","EditStateConfig","DeleteStateConfig","getAllState","method","Method","url","Endpoint","getStateById","addState","editState","deleteState","HttpMethod","Dashboard","Data","Auth","Login","User","All","UserById","CheckOut","Cod","PhonePay","Banner","BannerById","AddBanner","EditBanner","DeleteBanner","Category","CategoryById","AddCategory","EditCategory","DeleteCategory","Attendence","AttendenceById","AddAttendence","EditAttendence","DeleteAttendence","Holiday","HolidayById","AddHoliday","EditHoliday","DeleteHoliday","Service","ServiceById","AddService","EditService","DeleteService","SubCategory","SubCategoryById","subCategoryByCategoryIdConfig","AddSubCategory","EditSubCategory","DeleteSubCategory","Product","AllProductFrencise","ProductById","AddProduct","addProductVarients","EditProduct","EditProductVariant","DeleteProduct","Frencise","FrenciseAccept","FrenciseById","FrenciseCheck","AddFrencise","EditFrencise","DeleteFrencise","Role","RoleById","AddRole","EditRole","DeleteRole","Staff","StaffById","AddStaff","EditStaff","DeleteStaff","Farmer","FarmerById","AddFarmer","EditFarmer","DeleteFarmer","District","AllDistrict","DistrictById","DistrictByStateId","AddDistrict","EditDistrict","DeleteDistrict","AllState","StateById","AddState","EditState","DeleteState","ZipCode","AllZipCode","ZipCodeById","AddZipCode","EditZipCode","DeleteZipCode","FranchiseState","AllFranchiseState","FranchiseStateById","AddFranchiseState","EditFranchiseState","DeleteFranchiseState","FranchiseDistrict","AllFranchiseDistrict","FranchiseDistrictById","AddFranchiseDistrict","EditFranchiseDistrict","DeleteFranchiseDistrict","FranchiseBlock","AllFranchiseBlock","FranchiseBlockById","AddFranchiseBlock","EditFranchiseBlock","DeleteFranchiseBlock","FranchiseCluster","AllFranchiseCluster","FranchiseClusterById","AddFranchiseCluster","EditFranchiseCluster","DeleteFranchiseCluster","FranchiseVillage","AllFranchiseVillage","FranchiseVillageById","AddFranchiseVillage","EditFranchiseVillage","DeleteFranchiseVillage","Commissiom","CommissiomById","AddCommissiom","EditCommissiom","DeleteCommissiom","DataTable","navigate","useNavigate","React","page","setPage","useState","search","setSearch","rowsPerPage","setRowsPerPage","dispatch","useDispatch","stateApi","StateApi","rows","useSelector","state","useCallback","toast","updateAllState","console","error","useEffect","fullWidth","id","label","type","onChange","e","target","value","title","container","alignItems","justifyContent","spacing","gridSpacing","item","variant","onClick","startIcon","content","sx","width","overflow","maxHeight","stickyHeader","pl","filter","row","Title","toLowerCase","includes","slice","map","index","hover","role","tabIndex","align","Name","code","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange"],"sourceRoot":""}