{"version":3,"file":"static/js/7298.b18c5934.chunk.js","mappings":"2MAMMA,GAAcC,EAAAA,EAAAA,KAAO,SAACC,GAAK,OAAK,SAAC,KAAa,UAAKA,GAAS,GAAE,CAChEC,kBAAmB,SAACC,GAAI,MAAc,eAATA,CAAqB,GADlCH,EAEjB,gBAAGI,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAU,MAAQ,CAC3BC,MAAOF,EAAMG,QAAQC,KAAKC,QAC1BC,WAAY,IACZC,aAAcN,EAAa,EAAI,EAClC,IAEKO,EAAa,SAAH,OAAMC,EAAQ,EAARA,SAAUR,EAAU,EAAVA,WAAeS,GAAM,mBACjD,SAACf,GAAW,gBAACM,WAAYA,GAAgBS,GAAM,aAC1CD,IACS,EAQlBD,EAAWG,aAAe,CACtBV,YAAY,GAGhB,K,kLC+EA,UA/FA,WACE,IAAMW,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,GAAyCF,EAAAA,EAAAA,UAAS,IAAG,eAA9CG,EAAY,KAAGC,EAAe,KACrC,GAAiCJ,EAAAA,EAAAA,UAAS,IAAG,eAAtCK,EAAQ,KAAGC,EAAW,KA4C7B,OACE,SAAC,IAAQ,CAACC,MAAM,kBAAiB,UAC/B,kBAAMC,OAAO,IAAIC,SA5CrB,SAAsBC,GACpBA,EAAMC,iBACNT,GAAa,GACb,IAAIU,EAAY,IAAIC,QACpBD,EAAUE,OAAO,UAAWC,gDAC5BH,EAAUE,OACR,gBACA,UAAYE,aAAaC,QAAQ,UAEnCL,EAAUE,OAAO,eAAgB,oBACjC,IAKII,EAAiB,CACnBC,OAAQ,OACRC,QAASR,EACTS,KARQC,KAAKC,UAAU,CACrBC,QAASR,aAAaC,QAAQ,UAC9BQ,gBAAkBtB,EAClBE,SAAWA,IAMbqB,SAAU,UAGZC,MAAM,GAAD,OAAIZ,2CAA6B,kBAAkBG,GACrDU,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACe,MAAhBA,EAAOC,MACTlC,EAAS,KACTmC,EAAAA,GAAAA,QAAc,sBAAuB,CACnCC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,KAGbrC,GAAa,EAEjB,IACCsC,OAAM,SAACC,GAAW,GACvB,EAI4C,WACtC,UAAC,KAAI,CAACC,WAAS,EAACC,QAASC,EAAAA,GAAY,WACnC,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,iCACpB,SAAC,IAAS,CACRC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,MAAOlD,EACPmD,SAAU,SAACC,GAAC,OAAKnD,EAAgBmD,EAAEC,OAAOH,MAAM,EAChDI,YAAY,6BAIlB,SAAC,KAAI,CAACZ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAE,UACtB,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,UAAQ,yBACpB,SAAC,IAAS,CACRC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLE,MAAOhD,EACPiD,SAAU,SAACC,GAAC,OAAKjD,EAAYiD,EAAEC,OAAOH,MAAM,EAC5CI,YAAY,iCAKpB,mBACA,4BACGxD,GACC,SAAC,IAAgB,KAEjB,SAAC,IAAM,CAACyD,QAAQ,YAAYN,KAAK,SAAQ,mCAQrD,C","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/change-password/change-password.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport { InputLabel as MuiInputLabel } from '@mui/material';\r\n\r\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\r\n    shouldForwardProp: (prop) => prop !== 'horizontal'\r\n})(({ theme, horizontal }) => ({\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 500,\r\n    marginBottom: horizontal ? 0 : 8\r\n}));\r\n\r\nconst InputLabel = ({ children, horizontal, ...others }) => (\r\n    <BInputLabel horizontal={horizontal} {...others}>\r\n        {children}\r\n    </BInputLabel>\r\n);\r\n\r\nInputLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    horizontal: PropTypes.bool\r\n};\r\n\r\nInputLabel.defaultProps = {\r\n    horizontal: false\r\n};\r\n\r\nexport default InputLabel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  CircularProgress,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currPassword , setCurrPasswrod] = useState('');\r\n  const [password , setPasswrod] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n        adminId: localStorage.getItem(\"userId\"),\r\n        currentPassword : currPassword,\r\n        password : password\r\n      });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}passwordChange`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/\");\r\n          toast.success(\"Change Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  return (\r\n    <MainCard title=\"Change Password\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Current Password</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={currPassword}\r\n                onChange={(e) => setCurrPasswrod(e.target.value)}\r\n                placeholder=\"Enter product name\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Password</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPasswrod(e.target.value)}\r\n                placeholder=\"Enter product price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Change Password\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","navigate","useNavigate","useState","isLoading","setIsLoading","currPassword","setCurrPasswrod","password","setPasswrod","title","action","onSubmit","event","preventDefault","myHeaders","Headers","append","process","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","adminId","currentPassword","redirect","fetch","then","response","json","result","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","catch","error","container","spacing","gridSpacing","item","xs","md","required","fullWidth","id","name","type","value","onChange","e","target","placeholder","variant"],"sourceRoot":""}