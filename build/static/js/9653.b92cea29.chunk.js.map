{"version":3,"file":"static/js/9653.b92cea29.chunk.js","mappings":"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","sources":["views/utilities/e-commerce/ProductList.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  CardContent,\r\n  Checkbox,\r\n  Fab,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  Menu,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  TextField,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\n// third-party\r\nimport { format } from \"date-fns\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport Avatar from \"ui-component/extended/Avatar\";\r\nimport Chip from \"ui-component/extended/Chip\";\r\nimport { useDispatch, useSelector } from \"store\";\r\nimport { getProducts } from \"store/slices/product\";\r\n// assets\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FilterListIcon from \"@mui/icons-material/FilterListTwoTone\";\r\nimport PrintIcon from \"@mui/icons-material/PrintTwoTone\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopyTwoTone\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AddIcon from \"@mui/icons-material/AddTwoTone\";\r\nimport MoreHorizOutlinedIcon from \"@mui/icons-material/MoreHorizOutlined\";\r\n\r\nconst prodImage = require.context(\"assets/images/e-commerce\", true);\r\n\r\n// table sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst getComparator = (order, orderBy) =>\r\n  order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header options\r\nconst headCells = [\r\n  {\r\n    id: \"id\",\r\n    numeric: true,\r\n    label: \"#\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    label: \"Product Name\",\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"created\",\r\n    numeric: false,\r\n    label: \"Created\",\r\n    align: \"left\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    numeric: true,\r\n    label: \"Price\",\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"sale-price\",\r\n    numeric: true,\r\n    label: \"Sale Price\",\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"status\",\r\n    numeric: true,\r\n    label: \"Status\",\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\n// ==============================|| TABLE HEADER ||============================== //\r\n\r\nfunction EnhancedTableHead({\r\n  onSelectAllClick,\r\n  order,\r\n  orderBy,\r\n  numSelected,\r\n  rowCount,\r\n  onRequestSort,\r\n  theme,\r\n  selected,\r\n}) {\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              \"aria-label\": \"select all desserts\",\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {numSelected > 0 && (\r\n          <TableCell padding=\"none\" colSpan={7}>\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n          </TableCell>\r\n        )}\r\n        {numSelected <= 0 &&\r\n          headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.align}\r\n              padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <Typography component=\"span\" sx={{ display: \"none\" }}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Typography>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        {numSelected <= 0 && (\r\n          <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              sx={{\r\n                color:\r\n                  theme.palette.mode === \"dark\"\r\n                    ? theme.palette.grey[600]\r\n                    : \"grey.900\",\r\n              }}\r\n            >\r\n              Action\r\n            </Typography>\r\n          </TableCell>\r\n        )}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  theme: PropTypes.object,\r\n  selected: PropTypes.array,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n// ==============================|| TABLE HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }) => (\r\n  <Toolbar\r\n    sx={{\r\n      p: 0,\r\n      pl: 2,\r\n      pr: 1,\r\n      color: numSelected > 0 ? \"secondary.main\" : \"inherit\",\r\n    }}\r\n  >\r\n    {numSelected > 0 ? (\r\n      <Typography\r\n        sx={{ flex: \"1 1 100%\" }}\r\n        color=\"inherit\"\r\n        variant=\"h4\"\r\n        component=\"div\"\r\n      >\r\n        {numSelected} Selected\r\n      </Typography>\r\n    ) : (\r\n      <Typography\r\n        sx={{ flex: \"1 1 100%\" }}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        Nutrition\r\n      </Typography>\r\n    )}\r\n\r\n    {numSelected > 0 && (\r\n      <Tooltip title=\"Delete\">\r\n        <IconButton size=\"large\">\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    )}\r\n  </Toolbar>\r\n);\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\n// ==============================|| PRODUCT LIST ||============================== //\r\n\r\nconst ProductList = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event?.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setRows(products);\r\n  }, [products]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getProducts());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSearch = (event) => {\r\n    const newString = event?.target.value;\r\n    setSearch(newString || \"\");\r\n\r\n    if (newString) {\r\n      const newRows = rows?.filter((row) => {\r\n        let matches = true;\r\n\r\n        const properties = [\r\n          \"name\",\r\n          \"description\",\r\n          \"rating\",\r\n          \"salePrice\",\r\n          \"offerPrice\",\r\n          \"gender\",\r\n        ];\r\n        let containsQuery = false;\r\n\r\n        properties.forEach((property) => {\r\n          if (\r\n            row[property]\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(newString.toString().toLowerCase())\r\n          ) {\r\n            containsQuery = true;\r\n          }\r\n        });\r\n\r\n        if (!containsQuery) {\r\n          matches = false;\r\n        }\r\n        return matches;\r\n      });\r\n      setRows(newRows);\r\n    } else {\r\n      getProducts();\r\n    }\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelectedId = rows?.map((n) => n.name);\r\n      setSelected(newSelectedId);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event?.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <MainCard title=\"Product List\" content={false}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={handleSearch}\r\n              placeholder=\"Search Product\"\r\n              value={search}\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} sx={{ textAlign: \"right\" }}>\r\n            <Tooltip title=\"Copy\">\r\n              <IconButton size=\"large\">\r\n                <FileCopyIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Print\">\r\n              <IconButton size=\"large\">\r\n                <PrintIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Filter\">\r\n              <IconButton size=\"large\">\r\n                <FilterListIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            {/* product add & dialog */}\r\n            <Tooltip title=\"Add Product\">\r\n              <Fab\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                sx={{\r\n                  boxShadow: \"none\",\r\n                  ml: 1,\r\n                  width: 32,\r\n                  height: 32,\r\n                  minHeight: 32,\r\n                }}\r\n              >\r\n                <AddIcon fontSize=\"small\" />\r\n              </Fab>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n\r\n      {/* table */}\r\n      <TableContainer>\r\n        <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\r\n          <EnhancedTableHead\r\n            numSelected={selected.length}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={rows.length}\r\n            theme={theme}\r\n            selected={selected}\r\n          />\r\n          <TableBody>\r\n            {stableSort(rows, getComparator(order, orderBy))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                if (typeof row === \"number\") return null;\r\n                const isItemSelected = isSelected(row.name);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={index}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell\r\n                      padding=\"checkbox\"\r\n                      sx={{ pl: 3 }}\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                    >\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          \"aria-labelledby\": labelId,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      sx={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <Avatar\r\n                        src={row.image && prodImage(`./${row.image}`)}\r\n                        size=\"md\"\r\n                        variant=\"rounded\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      sx={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <Typography\r\n                        component={Link}\r\n                        to={`/e-commerce/product-details/${row.id}`}\r\n                        variant=\"subtitle1\"\r\n                        sx={{\r\n                          color:\r\n                            theme.palette.mode === \"dark\"\r\n                              ? theme.palette.grey[600]\r\n                              : \"grey.900\",\r\n                          textDecoration: \"none\",\r\n                        }}\r\n                      >\r\n                        {row.name}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {format(new Date(row.created), \"E, MMM d yyyy\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">${row.offerPrice}</TableCell>\r\n                    <TableCell align=\"right\">${row.salePrice}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Chip\r\n                        size=\"small\"\r\n                        label={row.isStock ? \"In Stock\" : \"Out of Stock\"}\r\n                        chipcolor={row.isStock ? \"success\" : \"error\"}\r\n                        sx={{\r\n                          borderRadius: \"4px\",\r\n                          textTransform: \"capitalize\",\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                      <IconButton onClick={handleMenuClick} size=\"large\">\r\n                        <MoreHorizOutlinedIcon\r\n                          fontSize=\"small\"\r\n                          aria-controls=\"menu-popular-card-1\"\r\n                          aria-haspopup=\"true\"\r\n                          sx={{ color: \"grey.500\" }}\r\n                        />\r\n                      </IconButton>\r\n                      <Menu\r\n                        id=\"menu-popular-card-1\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                        variant=\"selectedMenu\"\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"right\",\r\n                        }}\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"right\",\r\n                        }}\r\n                        sx={{\r\n                          \"& .MuiMenu-paper\": {\r\n                            boxShadow: theme.customShadows.z1,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <MenuItem onClick={handleClose}> Edit</MenuItem>\r\n                        <MenuItem onClick={handleClose}> Delete</MenuItem>\r\n                      </Menu>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {emptyRows > 0 && (\r\n              <TableRow\r\n                style={{\r\n                  height: 53 * emptyRows,\r\n                }}\r\n              >\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* table pagination */}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"names":["prodImage","require","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","align","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","theme","selected","padding","sx","pl","color","indeterminate","checked","onChange","inputProps","colSpan","EnhancedTableToolbar","length","headCell","disablePadding","sortDirection","active","direction","onClick","property","event","component","display","pr","variant","palette","mode","grey","p","flex","title","size","fontSize","useTheme","dispatch","useDispatch","React","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","search","setSearch","rows","setRows","products","useSelector","state","product","anchorEl","setAnchorEl","handleMenuClick","currentTarget","handleClose","getProducts","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","max","content","container","justifyContent","alignItems","spacing","item","xs","sm","InputProps","startAdornment","position","newString","target","value","newRows","filter","row","matches","containsQuery","forEach","toString","toLowerCase","includes","placeholder","textAlign","boxShadow","ml","width","height","minHeight","minWidth","newSelectedId","n","isItemSelected","labelId","hover","role","tabIndex","scope","cursor","src","image","Link","to","textDecoration","format","Date","created","offerPrice","salePrice","isStock","chipcolor","borderRadius","textTransform","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","customShadows","z1","style","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"sourceRoot":""}