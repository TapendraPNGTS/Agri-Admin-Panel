{"version":3,"file":"static/js/4094.36e143b9.chunk.js","mappings":"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","sources":["ui-component/extended/Form/InputLabel.js","views/utilities/product/edit-product.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport { InputLabel as MuiInputLabel } from '@mui/material';\n\nconst BInputLabel = styled((props) => <MuiInputLabel {...props} />, {\n    shouldForwardProp: (prop) => prop !== 'horizontal'\n})(({ theme, horizontal }) => ({\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    marginBottom: horizontal ? 0 : 8\n}));\n\nconst InputLabel = ({ children, horizontal, ...others }) => (\n    <BInputLabel horizontal={horizontal} {...others}>\n        {children}\n    </BInputLabel>\n);\n\nInputLabel.propTypes = {\n    children: PropTypes.node,\n    horizontal: PropTypes.bool\n};\n\nInputLabel.defaultProps = {\n    horizontal: false\n};\n\nexport default InputLabel;\n","import React, { useState , useEffect } from \"react\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport InputLabel from \"ui-component/extended/Form/InputLabel\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nfunction App() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState();\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [price, setPrice] = React.useState(\"\");\r\n  const [quantity, setQuantity] = React.useState(\"\");\r\n  const [proImage, setProImage] = React.useState([]);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [active, setActive] = React.useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n  myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\"));\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  function getProductById() {\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n      productId: params.id,\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getProductById`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setTitle(result.data.Name);\r\n        setActive(result.data.IsActive);\r\n        setPrice(result.data.Price);\r\n        setProImage(result.data.Images);\r\n        setQuantity(result.data.Quantity);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n  React.useEffect(() => {\r\n    getProductById();\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0]);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    var formdata = new FormData();\r\n    formdata.append(\"adminId\", localStorage.getItem(\"userId\"));\r\n    formdata.append(\"productId\", params.id);\r\n    formdata.append(\"name\", title);\r\n    formdata.append(\"active\", active);\r\n    formdata.append(\"price\", price);\r\n    formdata.append(\"quantity\", quantity);\r\n    formdata.append(\"categoryId\", category);\r\n    formdata.append(\"img\", file);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}updateProduct`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          navigate(\"/product\");\r\n          toast.success(\"Updated Successfully\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  function getAllCategory() {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllCategory`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setRows(result.data);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <MainCard title=\"Edit Product\">\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Name</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"category\"\r\n                name=\"category\"\r\n                inputProps={{ maxLength: 30 }}\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Enter category title\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={active}\r\n                onChange={(e) => setActive(e.target.value)}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Price</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 6);\r\n                }}\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"Enter Price\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Product Quantity</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                id=\"quantity\"\r\n                name=\"quantity\"\r\n                onInput={(e) => {\r\n                  e.target.value = Math.max(0, parseInt(e.target.value))\r\n                    .toString()\r\n                    .slice(0, 3);\r\n                }}\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                placeholder=\"Enter Quantity\"\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={6} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Choose Category</InputLabel>\r\n              <Select\r\n                id=\"active\"\r\n                name=\"active\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                {rows.map((row, i) => {\r\n                  return (\r\n                    <MenuItem key={i} value={row.CategoryID}>\r\n                      {row.Name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel>Choose ThumbnailImage</InputLabel>\r\n              <div class=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  class=\"custom-file-input\"\r\n                  id=\"thumbnail\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={handleChange}\r\n                />\r\n                <label class=\"custom-file-label\" for=\"thumbnail\">\r\n                  Choose file\r\n                </label>\r\n              </div>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br/>\r\n        <br/>\r\n        <Grid container spacing={gridSpacing}>\r\n          {proImage.map((primg, index) => {\r\n            <Grid item xs={4} md={4} key={index}>\r\n              <InputLabel required>Product Image</InputLabel>\r\n              <Stack>\r\n                <a\r\n                  href={`${process.env.REACT_APP_IMAGE_URL}${primg}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <img\r\n                    src={`${process.env.REACT_APP_IMAGE_URL}${primg}`}\r\n                    width={200}\r\n                    height={200}\r\n                  />\r\n                </a>\r\n              </Stack>\r\n            </Grid>;\r\n          })}\r\n        </Grid>\r\n        <br></br>\r\n        <center>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Update Product\r\n            </Button>\r\n          )}\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","children","others","defaultProps","params","useParams","navigate","useNavigate","useState","file","setFile","React","title","setTitle","price","setPrice","quantity","setQuantity","proImage","setProImage","rows","setRows","active","setActive","isLoading","setIsLoading","category","setCategory","myHeaders","Headers","append","process","localStorage","getItem","raw","JSON","stringify","adminId","productId","id","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","data","Name","IsActive","Price","Images","Quantity","catch","error","console","log","getProductById","useEffect","getAllCategory","action","onSubmit","event","preventDefault","formdata","FormData","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","container","spacing","gridSpacing","item","xs","md","required","fullWidth","name","inputProps","maxLength","value","onChange","e","target","placeholder","onInput","Math","max","parseInt","toString","slice","type","map","row","i","CategoryID","class","accept","files","for","primg","index","variant"],"sourceRoot":""}