{"version":3,"file":"static/js/431.e2371cab.chunk.js","mappings":"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","sources":["views/utilities/Franchise/franchise.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import React from \"react\";\r\n// material-ui\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n// ===============================|| COLOR BOX ||=============================== //\r\n// ===============================|| UI COLOR ||=============================== //\r\n\r\nexport default function Users() {\r\n  const navigate = useNavigate();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  function getAllFrenciseAccept() {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"authkey\", process.env.REACT_APP_AUTH_KEY);\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      \"Bearer \" + localStorage.getItem(\"token\")\r\n    );\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      adminId: localStorage.getItem(\"userId\"),\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}getAllFrenciseAccept`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.code === 200) {\r\n          setRows(result.data);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  useEffect(() => {\r\n    getAllFrenciseAccept();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n      <MainCard\r\n        title={\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">Franchise</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        content={false}\r\n      >\r\n        {rows ? (\r\n          <Card>\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n              <TableContainer sx={{ maxHeight: 540 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\" id=\"my-table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ pl: 3 }}>S No.</TableCell>\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>Email</TableCell>\r\n                      <TableCell>Phone</TableCell>\r\n                      <TableCell>Address</TableCell>\r\n                      <TableCell>City</TableCell>\r\n                      <TableCell>State</TableCell>\r\n                      <TableCell>Pin Code</TableCell>\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                        Action\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows\r\n                      .filter((row) =>\r\n                        search === \"\"\r\n                          ? row\r\n                          : row.Phone.toLowerCase().includes(\r\n                              search.toLowerCase()\r\n                            )\r\n                      )\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, index) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            role=\"checkbox\"\r\n                            tabIndex={-1}\r\n                            key={index}\r\n                          >\r\n                            <TableCell align=\"start\">{index + 1}</TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.Name ? row.Name : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.Email ? row.Email : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.Contact ? row.Contact : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.Address ? row.Address : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.City ? row.City : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.State ? row.State : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.PinCode ? row.PinCode : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.Status === \"Pending\" ? (\r\n                                <Chip\r\n                                  label=\"Pending\"\r\n                                  color=\"warning\"\r\n                                  size=\"small\"\r\n                                />\r\n                              ) : row.Status === \"Reject\" ? (\r\n                                <Chip\r\n                                  label=\"Reject\"\r\n                                  color=\"error\"\r\n                                  size=\"small\"\r\n                                />\r\n                              ) : (\r\n                                <Chip\r\n                                  label=\"Accept\"\r\n                                  color=\"success\"\r\n                                  size=\"small\"\r\n                                />\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                              {/* <Link\r\n                                to={`/view-franchise-request/${row.FrenchiseID}`}\r\n                              >\r\n                                <IconButton\r\n                                  color=\"primary\"\r\n                                  title=\"view User\"\r\n                                  aria-label=\"view\"\r\n                                  size=\"large\"\r\n                                >\r\n                                  <VisibilityIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                                </IconButton>\r\n                              </Link> */}\r\n                              <Tooltip\r\n                                placement=\"top\"\r\n                                title=\"Edit\"\r\n                                onClick={(e) => {\r\n                                  navigate(\r\n                                    `/edit-franchise-request/${row.FrenchiseID}`\r\n                                  );\r\n                                }}\r\n                                data-target={`#`}\r\n                              >\r\n                                <IconButton\r\n                                  color=\"primary\"\r\n                                  aria-label=\"edit\"\r\n                                  size=\"large\"\r\n                                >\r\n                                  <EditIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </Card>\r\n        ) : (\r\n          <center>\r\n            <CircularProgress />\r\n          </center>\r\n        )}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"names":["Users","navigate","useNavigate","React","page","setPage","rows","setRows","useState","rowsPerPage","setRowsPerPage","search","setSearch","useEffect","myHeaders","Headers","append","process","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","adminId","redirect","fetch","then","response","json","result","code","data","catch","error","getAllFrenciseAccept","id","label","type","fullWidth","onChange","e","target","value","title","container","alignItems","justifyContent","spacing","gridSpacing","item","variant","content","sx","width","overflow","maxHeight","stickyHeader","pl","align","pr","filter","row","Phone","toLowerCase","includes","slice","map","index","hover","role","tabIndex","Name","Email","Contact","Address","City","State","PinCode","Status","color","size","placement","onClick","FrenchiseID","fontSize","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}