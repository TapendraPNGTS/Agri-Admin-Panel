{"version":3,"file":"static/js/348.915e9759.chunk.js","mappings":"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","sources":["api/index.api.js","api/transaction.api.js","conffigs/endpoints.config.js","utils/common.utils.js","views/utilities/commision-history/commission-history.js"],"sourcesContent":["import axios from \"axios\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nexport class HttpClient {\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = async ({ response, config }) => {\r\n    const originalRequest = config;\r\n    if (response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      return this.instance(originalRequest);\r\n    }\r\n\r\n    return Promise.resolve(response);\r\n  };\r\n}\r\n\r\nexport default HttpClient;\r\n","import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../conffigs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass Transaction extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"Authkey\"] = process.env.REACT_APP_AUTH_KEY;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllTransactionConfig = ApiRoutes.Transaction.AllFrTransaction;\r\n  AllUserTransactionConfig = ApiRoutes.Transaction.AllUserTransaction;\r\n  FranchiseTransactionConfig = ApiRoutes.Transaction.FranchiseTransaction;\r\n  UserTransactionConfig = ApiRoutes.Transaction.UserTransaction;\r\n  CommissionHistoryConfig = ApiRoutes.Transaction.CommissionHistory;\r\n\r\n  getAllFranchiseTransaction = async () => {\r\n    return this.instance({\r\n      method: this.AllTransactionConfig.Method,\r\n      url: this.AllTransactionConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getAllUserTransaction = async (reqBody) => {\r\n    return this.instance({\r\n      method: this.AllUserTransactionConfig.Method,\r\n      url: this.AllUserTransactionConfig.Endpoint,\r\n      headers: {},\r\n      data: reqBody,\r\n    });\r\n  };\r\n\r\n  getAllCommissionHistory = async (reqBody) => {\r\n    return this.instance({\r\n      method: this.CommissionHistoryConfig.Method,\r\n      url: this.CommissionHistoryConfig.Endpoint,\r\n      headers: {},\r\n      data: reqBody,\r\n    });\r\n  };\r\n\r\n  // franchise\r\n\r\n  getFranchiseTransaction = async () => {\r\n    return this.instance({\r\n      method: this.FranchiseTransactionConfig.Method,\r\n      url: this.FranchiseTransactionConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getUserTransaction = async () => {\r\n    return this.instance({\r\n      method: this.UserTransactionConfig.Method,\r\n      url: this.UserTransactionConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Transaction;\r\n","export const HttpMethod = {\r\n  Get: \"GET\",\r\n  Post: \"POST\",\r\n  Put: \"PUT\",\r\n  Patch: \"PATCH\",\r\n  Delete: \"DELETE\",\r\n};\r\n\r\nconst ApiRoutes = {\r\n  Dashboard: {\r\n    Data: {\r\n      Endpoint: \"/dashboard\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Auth: {\r\n    Login: {\r\n      Endpoint: \"/login\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  User: {\r\n    All: {\r\n      Endpoint: \"/getAllUser\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    UserById: {\r\n      Endpoint: \"/getUserById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Transaction: {\r\n    AllFrTransaction: {\r\n      Endpoint: \"/getAllFranchiseTransaction\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllUserTransaction: {\r\n      Endpoint: \"/getAllUserTransaction\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseTransaction: {\r\n      Endpoint: \"/getFranchiseTransaction \",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    UserTransaction: {\r\n      Endpoint: \"/getUserTransaction \",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CommissionHistory: {\r\n      Endpoint: \"/getAllInchargeCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  CheckOut: {\r\n    Data: {\r\n      Endpoint: \"/addAllCart\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Order: {\r\n    AllFranchiseComplete: {\r\n      Endpoint: \"/getAllFranchiseOnline\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllFranchisePending: {\r\n      Endpoint: \"/getAllFranchiseCOD\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllUserComplete: {\r\n      Endpoint: \"/getAllUserOnline\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllUserPending: {\r\n      Endpoint: \"/getAllUserCOD\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Cod: {\r\n    Cod: {\r\n      Endpoint: \"/frenchiseProductCOD\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PhonePay: {\r\n      Endpoint: \"/payment\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Banner: {\r\n    All: {\r\n      Endpoint: \"/getAllBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    BannerById: {\r\n      Endpoint: \"/getBannerById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddBanner: {\r\n      Endpoint: \"/addBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditBanner: {\r\n      Endpoint: \"/updateBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteBanner: {\r\n      Endpoint: \"/deleteBanner\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Category: {\r\n    All: {\r\n      Endpoint: \"/getAllCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CategoryById: {\r\n      Endpoint: \"/getCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCategory: {\r\n      Endpoint: \"/addCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCategory: {\r\n      Endpoint: \"/updateCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Attendence: {\r\n    All: {\r\n      Endpoint: \"/getAllAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AttendenceById: {\r\n      Endpoint: \"/getAttendenceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddAttendence: {\r\n      Endpoint: \"/addAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditAttendence: {\r\n      Endpoint: \"/updateAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteAttendence: {\r\n      Endpoint: \"/deleteAttendence\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Holiday: {\r\n    All: {\r\n      Endpoint: \"/getAllHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    HolidayById: {\r\n      Endpoint: \"/getHolidayById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddHoliday: {\r\n      Endpoint: \"/addHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditHoliday: {\r\n      Endpoint: \"/updateHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteHoliday: {\r\n      Endpoint: \"/deleteHoliday\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Service: {\r\n    All: {\r\n      Endpoint: \"/getAllService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ServiceById: {\r\n      Endpoint: \"/getServiceById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddService: {\r\n      Endpoint: \"/addService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditService: {\r\n      Endpoint: \"/updateService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteService: {\r\n      Endpoint: \"/deleteService\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  SubCategory: {\r\n    All: {\r\n      Endpoint: \"/getAllSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    SubCategoryById: {\r\n      Endpoint: \"/getSubCategoryById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    subCategoryByCategoryIdConfig: {\r\n      Endpoint: \"/getSubCategoryByCategoryId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddSubCategory: {\r\n      Endpoint: \"/addSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditSubCategory: {\r\n      Endpoint: \"/updateSubCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteSubCategory: {\r\n      Endpoint: \"/deleteCategory\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n\r\n  Product: {\r\n    All: {\r\n      Endpoint: \"/getAllProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AllProductFrencise: {\r\n      Endpoint: \"/getFranchiseProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ProductById: {\r\n      Endpoint: \"/getProductById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddProduct: {\r\n      Endpoint: \"/addProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    addProductVarients: {\r\n      Endpoint: \"/addProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProduct: {\r\n      Endpoint: \"/updateProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditProductVariant: {\r\n      Endpoint: \"/updateProductVarients\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteProduct: {\r\n      Endpoint: \"/deleteProduct\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Frencise: {\r\n    All: {\r\n      Endpoint: \"/getAllFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseAccept: {\r\n      Endpoint: \"/getAllFrencisePending\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseById: {\r\n      Endpoint: \"/getFrenciseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FrenciseCheck: {\r\n      Endpoint: \"/frenciseCheck\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFrencise: {\r\n      Endpoint: \"/addFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFrencise: {\r\n      Endpoint: \"/editFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFrencise: {\r\n      Endpoint: \"/deleteFrencise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Role: {\r\n    All: {\r\n      Endpoint: \"/getAllRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    RoleById: {\r\n      Endpoint: \"/getRoleById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddRole: {\r\n      Endpoint: \"/addRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditRole: {\r\n      Endpoint: \"/updateRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteRole: {\r\n      Endpoint: \"/deleteRole\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Staff: {\r\n    All: {\r\n      Endpoint: \"/getAllStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StaffById: {\r\n      Endpoint: \"/getStaffById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddStaff: {\r\n      Endpoint: \"/addStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditStaff: {\r\n      Endpoint: \"/updateStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteStaff: {\r\n      Endpoint: \"/deleteStaff\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Farmer: {\r\n    All: {\r\n      Endpoint: \"/getAllServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FarmerById: {\r\n      Endpoint: \"/getServiceRequestById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFarmer: {\r\n      Endpoint: \"/addServiceRequest\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFarmer: {\r\n      Endpoint: \"/updateFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFarmer: {\r\n      Endpoint: \"/deleteFarmer\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  District: {\r\n    AllDistrict: {\r\n      Endpoint: \"/getAllDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictById: {\r\n      Endpoint: \"/getDistrictById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DistrictByStateId: {\r\n      Endpoint: \"/getCityByStateId\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddDistrict: {\r\n      Endpoint: \"/addDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditDistrict: {\r\n      Endpoint: \"/updateDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteDistrict: {\r\n      Endpoint: \"/deleteDistrict\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  State: {\r\n    AllState: {\r\n      Endpoint: \"/getAllState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    StateById: {\r\n      Endpoint: \"/getStateById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddState: {\r\n      Endpoint: \"/addState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditState: {\r\n      Endpoint: \"/updateState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteState: {\r\n      Endpoint: \"/deleteState\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Block: {\r\n    AllBlock: {\r\n      Endpoint: \"/getAllBlock\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    BlockById: {\r\n      Endpoint: \"/getBlockById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddBlock: {\r\n      Endpoint: \"/addBlock\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditBlock: {\r\n      Endpoint: \"/editBlock\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteBlock: {\r\n      Endpoint: \"/deleteBlock\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Cluster: {\r\n    AllCluster: {\r\n      Endpoint: \"/getAllCluster\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    ClusterById: {\r\n      Endpoint: \"/getClusterById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCluster: {\r\n      Endpoint: \"/addCluster\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCluster: {\r\n      Endpoint: \"/editCluster\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCluster: {\r\n      Endpoint: \"/deleteCluster\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseState: {\r\n    AllFranchiseState: {\r\n      Endpoint: \"/getAllStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseStateById: {\r\n      Endpoint: \"/getStateFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseState: {\r\n      Endpoint: \"/addStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseState: {\r\n      Endpoint: \"/editStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseState: {\r\n      Endpoint: \"/deleteStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PendingStateFranchise: {\r\n      Endpoint: \"/getAllPendingStateFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    frenciseStateAccept: {\r\n      Endpoint: \"/frenciseStateAccept\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseDistrict: {\r\n    AllFranchiseDistrict: {\r\n      Endpoint: \"/getAllDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseDistrictById: {\r\n      Endpoint: \"/getDistrictFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseDistrict: {\r\n      Endpoint: \"/addDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseDistrict: {\r\n      Endpoint: \"/editDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseDistrict: {\r\n      Endpoint: \"/deleteDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PendingDistrictFranchise: {\r\n      Endpoint: \"/getAllPendingDistrictFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    frenciseDistrictAccept: {\r\n      Endpoint: \"/frenciseDistrictAccept\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseBlock: {\r\n    AllFranchiseBlock: {\r\n      Endpoint: \"/getAllBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseBlockById: {\r\n      Endpoint: \"/getBlockFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseBlock: {\r\n      Endpoint: \"/addBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseBlock: {\r\n      Endpoint: \"/editBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseBlock: {\r\n      Endpoint: \"/deleteBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PendingBlockFranchise: {\r\n      Endpoint: \"/getAllPendingBlockFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseCluster: {\r\n    AllFranchiseCluster: {\r\n      Endpoint: \"/getAllClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseClusterById: {\r\n      Endpoint: \"/getClusterFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseCluster: {\r\n      Endpoint: \"/addClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseCluster: {\r\n      Endpoint: \"/editClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseCluster: {\r\n      Endpoint: \"/deleteClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    PendingClusterFranchise: {\r\n      Endpoint: \"/getAllPendingClusterFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    frenciseClusterAccept: {\r\n      Endpoint: \"/frenciseClusterAccept\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  FranchiseVillage: {\r\n    AllFranchiseVillage: {\r\n      Endpoint: \"/getAllVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    FranchiseVillageById: {\r\n      Endpoint: \"/getVillageFranchiseById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddFranchiseVillage: {\r\n      Endpoint: \"/addVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditFranchiseVillage: {\r\n      Endpoint: \"/editVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteFranchiseVillage: {\r\n      Endpoint: \"/deleteVillageFranchise\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n  Commissiom: {\r\n    All: {\r\n      Endpoint: \"/getAllCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    CommissiomById: {\r\n      Endpoint: \"/getCommissionById\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    AddCommissiom: {\r\n      Endpoint: \"/addCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    EditCommissiom: {\r\n      Endpoint: \"/updateCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n    DeleteCommissiom: {\r\n      Endpoint: \"/deleteCommission\",\r\n      Method: HttpMethod.Post,\r\n    },\r\n  },\r\n};\r\n\r\nexport default ApiRoutes;\r\n","export const formatDate = (date) => { return new Date(date).toLocaleString(\"en-in\", { day: \"numeric\", month: \"short\", year: \"numeric\", }); }","import React, { useState } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Grid } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { formatDate } from \"utils/common.utils\";\r\nimport {\r\n  IconButton,\r\n  Stack,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport TransactionAPi from \"../../../api/transaction.api\";\r\nimport { useEffect, useCallback } from \"react\";\r\n\r\nexport default function CommissionHistory() {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [all, setAll] = useState('all')\r\n  const [transaction, setTransaction] = useState([])\r\n  const transactionApi = new TransactionAPi();\r\n\r\n  function handleClick(index) {\r\n    // setAll(index);\r\n    // getTransaction();\r\n  }\r\n\r\n\r\n  const getTransaction = useCallback(async (allvalue) => {\r\n    try {\r\n      const block = await transactionApi.getAllCommissionHistory();\r\n      if (!block || !block.data.data) {\r\n        return toast.error(\"no latest user available\");\r\n      } else {\r\n        \r\n        setTransaction(block.data.data)\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    getTransaction(all);\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n      <MainCard\r\n        // title={\r\n        //   // <Grid\r\n        //   //   container\r\n        //   //   alignItems=\"center\"\r\n        //   //   justifyContent=\"space-between\"\r\n        //   //   spacing={gridSpacing}\r\n        //   // >\r\n        //   //   <Grid item style={{ cursor: \"pointer\" }}>\r\n        //   //     <Typography\r\n        //   //       variant=\"h5\"\r\n        //   //       style={all === \"all\" ? { color: \"blue\" } : { color: \"\" }}\r\n        //   //       onClick={(e) => {\r\n        //   //         setAll(\"all\");\r\n        //   //         getTransaction(\"all\");\r\n        //   //        }}\r\n        //   //     >\r\n        //   //       All\r\n        //   //     </Typography>\r\n        //   //   </Grid>\r\n        //   //   {/* <Grid item style={{ cursor: \"pointer\" }}>\r\n        //   //     <Typography\r\n        //   //       variant=\"h5\"\r\n        //   //       style={all === \"completed\" ? { color: \"blue\" } : { color: \"\" }}\r\n        //   //       onClick={(e) => {\r\n        //   //          setAll(\"completed\");\r\n        //   //          getTransaction(\"complete\");\r\n        //   //         }}\r\n        //   //     >\r\n        //   //       Completed\r\n        //   //     </Typography>\r\n        //   //   </Grid>\r\n        //   //   <Grid item style={{ cursor: \"pointer\" }}>\r\n        //   //     <Typography\r\n        //   //       variant=\"h5\"\r\n        //   //       style={all === \"pending\" ? { color: \"blue\" } : { color: \"\" }}\r\n        //   //       onClick={(e) => \r\n        //   //       {setAll(\"pending\");\r\n        //   //       getTransaction(\"pending\");}\r\n        //   //     }\r\n        //   //     >\r\n        //   //       Pending\r\n        //   //     </Typography>\r\n        //   //   </Grid>\r\n        //   //   <Grid item style={{ cursor: \"pointer\" }}>\r\n        //   //     <Typography\r\n        //   //       variant=\"h5\"\r\n        //   //       style={all === \"cod\" ? { color: \"blue\" } : { color: \"\" }}\r\n        //   //       onClick={(e) => {setAll(\"cod\");\r\n        //   //       getTransaction(\"cod\");}}\r\n        //   //     >\r\n        //   //       COD\r\n        //   //     </Typography>\r\n        //   //   </Grid>\r\n        //   //   <Grid item style={{ cursor: \"pointer\" }}>\r\n        //   //     <Typography\r\n        //   //       variant=\"h5\"\r\n        //   //       style={\r\n        //   //         all === \"Payment Gateway\" ? { color: \"blue\" } : { color: \"\" }\r\n        //   //       }\r\n        //   //       onClick={(e) => {setAll(\"Payment Gateway\");\r\n        //   //       getTransaction(\"Payment Gateway\");}}\r\n        //   //     >\r\n        //   //       Payment Gateway\r\n        //   //     </Typography>\r\n        //   //   </Grid> */}\r\n        //   //   <br />\r\n        //   //   <hr />\r\n        //   //   <Grid item>\r\n        //   //     {/* <Typography\r\n        //   //       variant=\"h3\"\r\n        //   //       style={all === 5 ? { color: \"blue\" } : { color: \"\" }}\r\n        //   //       onClick={() => handleClick(5)}\r\n        //   //     >\r\n        //   //       Transaction History\r\n        //   //     </Typography> */}\r\n        //   //   </Grid>\r\n        //   // </Grid>\r\n        // }\r\n        content={false}\r\n      >\r\n        {/* {rows ? ( */}\r\n        <Card>\r\n          <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n            <TableContainer sx={{ maxHeight: 540 }}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell sx={{ pl: 3 }}>S No.</TableCell>\r\n                    <TableCell>Product Name</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Incharage </TableCell>\r\n                    <TableCell>Incharage Name </TableCell>\r\n                    <TableCell>Commission Amount</TableCell>\r\n                    <TableCell>Commission %</TableCell>\r\n                    <TableCell>Amount</TableCell>\r\n                  \r\n                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                      Actions\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {/* {rows\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, index) => {\r\n                        return ( */}\r\n\r\n                  {transaction\r\n                  .filter((row) =>\r\n                  search === \"\"\r\n                    ? row\r\n                    :  row.ProductID.Name.toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    ) || row.CommissionPer.toString().toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    ) || row.CommissionPer.toString().includes(\r\n                      search\r\n                    ) || row.Type.toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    ) || row.FranchiseID.UserName.toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    )\r\n                ).map((row, index) => {\r\n                    return (\r\n                      <>\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                        // key={row.code}\r\n                        >\r\n                          <TableCell align=\"center\">\r\n\r\n                            {index + 1}\r\n                          </TableCell>\r\n                          <TableCell align=\"start\">\r\n                            {row.ProductID.Name}\r\n                          </TableCell>\r\n                          <TableCell align=\"start\">\r\n                            {formatDate(row.createdAt)}\r\n                          </TableCell>\r\n                          <TableCell align=\"start\">\r\n                            {row.Type}\r\n                          </TableCell>\r\n                          <TableCell align=\"start\">\r\n                            {row.FranchiseID.UserName}\r\n                          </TableCell>\r\n                          <TableCell align=\"start\">\r\n                          <b> ₹ {row.Commission} /-</b>\r\n                          </TableCell>\r\n                          <TableCell align=\"start\">\r\n                         <b> {row.CommissionPer} % </b>\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"start\" \r\n                           >\r\n                            <b> ₹ {row.Amount} /-</b>\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                            <Stack\r\n                              direction=\"row\"\r\n                              justifyContent=\"center\"\r\n                              alignItems=\"center\"\r\n                            >\r\n                              <Tooltip placement=\"top\" title=\"view\">\r\n                                <Link\r\n                                // to={`/view-purchase-history/${row.PaymentID}`}\r\n                                //   onClick={()=>handleHistory(row.PaymentID)}\r\n                                >\r\n                                  <IconButton\r\n                                    color=\"primary\"\r\n                                    aria-label=\"view\"\r\n                                    size=\"large\"\r\n                                  >\r\n                                    <RemoveRedEyeIcon\r\n                                      sx={{ fontSize: \"1.1rem\" }}\r\n                                    />\r\n                                  </IconButton>\r\n                                </Link>\r\n                              </Tooltip>\r\n                            </Stack>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </>\r\n                    )\r\n                  })\r\n\r\n                  }\r\n\r\n                  {/* );\r\n                      })} */}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {/* <TablePagination\r\n                rowsPerPageOptions={[10, 20, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              /> */}\r\n          </Paper>\r\n        </Card>\r\n        {/* ) : ( */}\r\n        <>\r\n          {/* <br></br>\r\n            <center>\r\n              <CircularProgress />\r\n            </center> */}\r\n        </>\r\n        {/* )} */}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n\r\n// export default CommissionHistory\r\n"],"names":["HttpClient","baseURL","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","config","originalRequest","status","_retry","Promise","resolve","this","axios","Transaction","process","_initializeRequestInterceptor","request","headers","getTokenLocal","AllTransactionConfig","ApiRoutes","AllUserTransactionConfig","FranchiseTransactionConfig","UserTransactionConfig","CommissionHistoryConfig","getAllFranchiseTransaction","method","Method","url","Endpoint","getAllUserTransaction","reqBody","getAllCommissionHistory","getFranchiseTransaction","getUserTransaction","HttpMethod","Dashboard","Data","Auth","Login","User","All","UserById","AllFrTransaction","AllUserTransaction","FranchiseTransaction","UserTransaction","CommissionHistory","CheckOut","Order","AllFranchiseComplete","AllFranchisePending","AllUserComplete","AllUserPending","Cod","PhonePay","Banner","BannerById","AddBanner","EditBanner","DeleteBanner","Category","CategoryById","AddCategory","EditCategory","DeleteCategory","Attendence","AttendenceById","AddAttendence","EditAttendence","DeleteAttendence","Holiday","HolidayById","AddHoliday","EditHoliday","DeleteHoliday","Service","ServiceById","AddService","EditService","DeleteService","SubCategory","SubCategoryById","subCategoryByCategoryIdConfig","AddSubCategory","EditSubCategory","DeleteSubCategory","Product","AllProductFrencise","ProductById","AddProduct","addProductVarients","EditProduct","EditProductVariant","DeleteProduct","Frencise","FrenciseAccept","FrenciseById","FrenciseCheck","AddFrencise","EditFrencise","DeleteFrencise","Role","RoleById","AddRole","EditRole","DeleteRole","Staff","StaffById","AddStaff","EditStaff","DeleteStaff","Farmer","FarmerById","AddFarmer","EditFarmer","DeleteFarmer","District","AllDistrict","DistrictById","DistrictByStateId","AddDistrict","EditDistrict","DeleteDistrict","State","AllState","StateById","AddState","EditState","DeleteState","Block","AllBlock","BlockById","AddBlock","EditBlock","DeleteBlock","Cluster","AllCluster","ClusterById","AddCluster","EditCluster","DeleteCluster","FranchiseState","AllFranchiseState","FranchiseStateById","AddFranchiseState","EditFranchiseState","DeleteFranchiseState","PendingStateFranchise","frenciseStateAccept","FranchiseDistrict","AllFranchiseDistrict","FranchiseDistrictById","AddFranchiseDistrict","EditFranchiseDistrict","DeleteFranchiseDistrict","PendingDistrictFranchise","frenciseDistrictAccept","FranchiseBlock","AllFranchiseBlock","FranchiseBlockById","AddFranchiseBlock","EditFranchiseBlock","DeleteFranchiseBlock","PendingBlockFranchise","FranchiseCluster","AllFranchiseCluster","FranchiseClusterById","AddFranchiseCluster","EditFranchiseCluster","DeleteFranchiseCluster","PendingClusterFranchise","frenciseClusterAccept","FranchiseVillage","AllFranchiseVillage","FranchiseVillageById","AddFranchiseVillage","EditFranchiseVillage","DeleteFranchiseVillage","Commissiom","CommissiomById","AddCommissiom","EditCommissiom","DeleteCommissiom","formatDate","date","Date","toLocaleString","day","month","year","useState","search","setSearch","all","transaction","setTransaction","transactionApi","TransactionAPi","getTransaction","useCallback","allvalue","block","toast","console","error","useEffect","id","label","type","fullWidth","onChange","e","target","value","content","sx","width","overflow","maxHeight","stickyHeader","pl","align","pr","filter","row","ProductID","Name","toLowerCase","includes","CommissionPer","toString","Type","FranchiseID","UserName","map","index","hover","role","tabIndex","createdAt","Commission","Amount","direction","justifyContent","alignItems","placement","title","color","size","fontSize"],"sourceRoot":""}